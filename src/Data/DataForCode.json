[
  {
    "id": 0,
    "text": "<pre class=\"codeAreaTxt\">\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span> <span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">Hello, World!</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 1,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> pare<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">!</span>= 0<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> 10 <span class=\"light-blue\">%</span> 2 <span class=\"light-blue\">!</span>= 0<span class=\"yelow\">)</span>\n      <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n    x = x / 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> x<span class=\"light-blue\">,</span> i<span class=\"light-blue\">,</span> maxim = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>pare<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span> == 1<span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> x <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' '<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">&gt;</span> maxim<span class=\"yelow\">)</span>\n      maxim = x<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>maxim <span class=\"light-blue\">!</span>= <span class=\"light-blue\">-</span>1<span class=\"yelow\">)</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> maxim<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 2,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> r = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>n <span class=\"light-blue\">!</span>= 0<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> cif = n <span class=\"light-blue\">%</span> 10<span class=\"light-blue\">;</span>\n    r<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>r <span class=\"light-blue\">%</span> 2 == 0<span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cif <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' '<span class=\"light-blue\">;</span>\n    n /= 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> cerintab<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> y = 0<span class=\"light-blue\">,</span> p = 1<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>n <span class=\"light-blue\">&gt;</span> 9<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    y = y <span class=\"light-blue\">+</span> <span class=\"yelow\">(</span>n <span class=\"light-blue\">%</span> 10<span class=\"yelow\">)</span> <span class=\"light-blue\">*</span> p<span class=\"light-blue\">;</span>\n    p <span class=\"light-blue\">*</span>= 10<span class=\"light-blue\">;</span>\n    n /= 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  y = y <span class=\"light-blue\">*</span> 10 <span class=\"light-blue\">+</span> n<span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> y<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  afis<span class=\"yelow\">(</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cerintab<span class=\"yelow\">(</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 3,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">date.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">date.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> cmmdc<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>b<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> r = a <span class=\"light-blue\">%</span> b<span class=\"light-blue\">;</span>\n    a = b<span class=\"light-blue\">;</span>\n    b = r<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> a<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> rezolare<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">struct</span> <span class=\"gray\">// memorizez valoarea nr impar minimi si pozitia sa intr-un struct </span>\n  <span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> nr = 999999999<span class=\"light-blue\">,</span> poz<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span> imp<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">%</span> 2 == 1<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span> imp.nr<span class=\"yelow\">)</span> <span class=\"gray\">// calculez nr impar si stochez in struct valoarea si pozitia unde se afla in vector </span>\n      <span class=\"yelow\">{</span>\n        imp.nr = v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        imp.poz = i<span class=\"light-blue\">;</span>\n      <span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> imp.nr <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> imp.poz <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span> <span class=\"gray\">// cerinta a</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cmmdc<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>2<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> <span class=\"gray\">// cerinta b</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  rezolare<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 4,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">vector</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">date.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">date.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n\n<span class=\"purple\">struct</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> nr_divizori<span class=\"light-blue\">,</span> valoarea<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span> maxi_divizori<span class=\"light-blue\">;</span>\n\n<span class=\"light-green\">vector</span><span class=\"light-blue\">&lt;</span><span class=\"purple\">int</span><span class=\"light-blue\">&gt;</span> divizorii_proprii<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span> <span class=\"gray\">// returneaza un vector ce contine divizorii proprii variabilei primite ca parametru in cazul nostru x</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-green\">vector</span><span class=\"light-blue\">&lt;</span><span class=\"purple\">int</span><span class=\"light-blue\">&gt;</span> vec_divizori<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> d = 2<span class=\"light-blue\">;</span> d <span class=\"light-blue\">&lt;</span>= x / 2<span class=\"light-blue\">;</span> d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> d == 0<span class=\"yelow\">)</span>\n      vec_divizori.push_back<span class=\"yelow\">(</span>d<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> vec_divizori<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> cerinta_a<span class=\"yelow\">(</span><span class=\"purple\">int</span> nr<span class=\"light-blue\">,</span> <span class=\"light-green\">vector</span><span class=\"light-blue\">&lt;</span><span class=\"purple\">int</span><span class=\"light-blue\">&gt;</span> vec_divizori<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"gray\">// afiseaza numarul citit din fisier si dupa divizorii sai</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> nr <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> vec_divizori.size<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> vec_divizori<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n\n  <span class=\"gray\">// cerinta b: de la fiecare numar citit din fisier se verifica lungimea vectorului ce contine divizorii numarului curent si se compara cu maxi. In caz ca gaseste astfel de numar ce are mai multi divizori decat maxi, in maxi se va stoca nr de divizori si valoarea numarul ce avea acei divizori.</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>vec_divizori.size<span class=\"yelow\">(</span><span class=\"yelow\">)</span> <span class=\"light-blue\">&gt;</span> maxi_divizori.nr_divizori<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    maxi_divizori.valoarea = nr<span class=\"light-blue\">;</span>\n    maxi_divizori.nr_divizori = vec_divizori.size<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"gray\">// In caz ca am doua valori cu nr de divizori maxim se va stoca in maxi valorea mai mica </span>\n  else <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>vec_divizori.size<span class=\"yelow\">(</span><span class=\"yelow\">)</span> == maxi_divizori.nr_divizori<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>nr <span class=\"light-blue\">&lt;</span> maxi_divizori.valoarea<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      maxi_divizori.valoarea = nr<span class=\"light-blue\">;</span>\n      maxi_divizori.nr_divizori = vec_divizori.size<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> input<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span><span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    cerinta_a<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> divizorii_proprii<span class=\"yelow\">(</span>n<span class=\"yelow\">)</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> maxi_divizori.valoarea<span class=\"light-blue\">;</span> <span class=\"gray\">// cerinta b</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  input<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 5,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">Numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">Rezultat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> x<span class=\"light-blue\">,</span> a<span class=\"light-blue\">,</span> y<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> prim<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">&lt;</span> 2<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x == 2<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> 2 == 0<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> d = 3<span class=\"light-blue\">;</span> d <span class=\"light-blue\">*</span> d <span class=\"light-blue\">&lt;</span>= x<span class=\"light-blue\">;</span> d = d <span class=\"light-blue\">+</span> 2<span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> d == 0<span class=\"yelow\">)</span>\n      <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> d = 2<span class=\"light-blue\">,</span> p = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>a <span class=\"light-blue\">!</span>= 1<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>a <span class=\"light-blue\">%</span> d == 0<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      a /= d<span class=\"light-blue\">;</span>\n      p<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>p <span class=\"light-blue\">!</span>= 0<span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> d <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' ' <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> p <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    p = 0<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"light-blue\">;</span>\n  afis<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span><span class=\"yelow\">)</span>\n    y = x<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span><span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span> <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> y == 0<span class=\"yelow\">)</span>\n      y = x<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> y<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 6,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> x<span class=\"light-blue\">,</span> p = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">,</span> u = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">,</span> maxi = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> palindrom<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> aux = x<span class=\"light-blue\">,</span> ogl = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>aux<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    ogl = ogl <span class=\"light-blue\">*</span> 10 <span class=\"light-blue\">+</span> aux <span class=\"light-blue\">%</span> 10<span class=\"light-blue\">;</span>\n    aux /= 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x == ogl<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n  else\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span><span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>palindrom<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span> == 1<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>p == <span class=\"light-blue\">-</span>1<span class=\"yelow\">)</span>\n        p = x<span class=\"light-blue\">;</span>\n      u = x<span class=\"light-blue\">;</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">&gt;</span> maxi<span class=\"yelow\">)</span>\n        maxi = x<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> maxi <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> p <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> u<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 7,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> x<span class=\"light-blue\">,</span> p = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">,</span> u = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">,</span> maxi = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> nr_cif<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> nr = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    x = x / 10<span class=\"light-blue\">;</span>\n    nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> nr<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> cmmdc<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>a <span class=\"light-blue\">!</span>= b<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>a <span class=\"light-blue\">&gt;</span> b<span class=\"yelow\">)</span>\n      a = a <span class=\"light-blue\">-</span> b<span class=\"light-blue\">;</span>\n    else\n      b = b <span class=\"light-blue\">-</span> a<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> a<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> x<span class=\"light-blue\">,</span> mini = 99999<span class=\"light-blue\">,</span> maxi = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> 2 == 1<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> nr_cif<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>mini <span class=\"light-blue\">&gt;</span> x<span class=\"yelow\">)</span> <span class=\"gray\">// mini maxi din cele impare sau din toate?</span>\n        mini = x<span class=\"light-blue\">;</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>maxi <span class=\"light-blue\">&lt;</span> x<span class=\"yelow\">)</span>\n        maxi = x<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cmmdc<span class=\"yelow\">(</span>mini<span class=\"light-blue\">,</span> maxi<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 8,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cmmdc3.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cmmdc3.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> x<span class=\"light-blue\">,</span> a<span class=\"light-blue\">,</span> b<span class=\"light-blue\">,</span> c<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> cmmdc<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>a <span class=\"light-blue\">!</span>= b<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>a <span class=\"light-blue\">&gt;</span> b<span class=\"yelow\">)</span>\n      a = a <span class=\"light-blue\">-</span> b<span class=\"light-blue\">;</span>\n    else\n      b = b <span class=\"light-blue\">-</span> a<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> a<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"light-blue\">;</span>\n  a = x / 1000000<span class=\"light-blue\">;</span>\n  b = <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> 1000000<span class=\"yelow\">)</span> / 1000<span class=\"light-blue\">;</span>\n  c = x <span class=\"light-blue\">%</span> 1000<span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> a <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' ' <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> b <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' ' <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> c <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cmmdc<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span> cmmdc<span class=\"yelow\">(</span>b<span class=\"light-blue\">,</span> c<span class=\"yelow\">)</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 9,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip1.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip1.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> k<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> k<span class=\"light-blue\">;</span>\n  long long p = 1<span class=\"light-blue\">;</span>\n  <span class=\"purple\">int</span> nr = 0<span class=\"light-blue\">,</span> aux = n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>n<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span><span class=\"yelow\">(</span>n <span class=\"light-blue\">%</span> 10<span class=\"yelow\">)</span> <span class=\"light-blue\">!</span>= k<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      nr = nr <span class=\"light-blue\">+</span> n <span class=\"light-blue\">%</span> 10 <span class=\"light-blue\">*</span> p<span class=\"light-blue\">;</span>\n      p <span class=\"light-blue\">*</span>= 10<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    n /= 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">int</span> putere = 1<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>putere <span class=\"light-blue\">&lt;</span>= aux<span class=\"yelow\">)</span>\n    putere <span class=\"light-blue\">*</span>= k<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>putere <span class=\"light-blue\">&gt;</span> aux<span class=\"yelow\">)</span>\n    putere /= k<span class=\"light-blue\">;</span>\n  /<span class=\"light-blue\">*</span>\n  putere=1<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>putere<span class=\"light-blue\">*</span>k<span class=\"light-blue\">&lt;</span>=aux<span class=\"yelow\">)</span>\n      putere=putere<span class=\"light-blue\">*</span>k<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">*</span>/\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> nr <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' ' <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> putere<span class=\"light-blue\">;</span>\n    <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 10,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> k<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> ordonare<span class=\"yelow\">(</span><span class=\"purple\">int</span> v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> i<span class=\"light-blue\">,</span> j<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>j = i <span class=\"light-blue\">+</span> 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n      <span class=\"yelow\">{</span>\n        <span class=\"purple\">int</span> aux = v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> = v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span> = aux<span class=\"light-blue\">;</span>\n      <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> palindrom<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> x2 = x<span class=\"light-blue\">,</span> ogl = 0<span class=\"light-blue\">;</span>\n\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> c = x <span class=\"light-blue\">%</span> 10<span class=\"light-blue\">;</span>\n    ogl = ogl <span class=\"light-blue\">*</span> 10 <span class=\"light-blue\">+</span> c<span class=\"light-blue\">;</span>\n    x = x / 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x2 == ogl<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n  else\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> nrcif<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> nr = 0<span class=\"light-blue\">;</span>\n\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> c = x <span class=\"light-blue\">%</span> 10<span class=\"light-blue\">;</span>\n    nr = nr <span class=\"light-blue\">+</span> 1<span class=\"light-blue\">;</span>\n    x = x / 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n\n  <span class=\"purple\">return</span> nr<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span> i<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>palindrom<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> == 1<span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' '<span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  ordonare<span class=\"yelow\">(</span>v<span class=\"light-blue\">,</span> n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>palindrom<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> == 1 <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> nrcif<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> <span class=\"light-blue\">%</span> 2 == 1<span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> ' '<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 11,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cmath</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">puncte.txt</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">puncte.txt</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">struct</span> punct\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> x<span class=\"light-blue\">,</span> y<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span> v<span class=\"purple\">[</span>1000<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n<span class=\"purple\">double</span> dist<span class=\"yelow\">(</span>punct a<span class=\"light-blue\">,</span> punct b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">return</span> sqrt<span class=\"yelow\">(</span><span class=\"yelow\">(</span>a.x <span class=\"light-blue\">-</span> b.x<span class=\"yelow\">)</span> <span class=\"light-blue\">*</span> <span class=\"yelow\">(</span>a.x <span class=\"light-blue\">-</span> b.x<span class=\"yelow\">)</span> <span class=\"light-blue\">+</span> <span class=\"yelow\">(</span>a.y <span class=\"light-blue\">-</span> b.y<span class=\"yelow\">)</span> <span class=\"light-blue\">*</span> <span class=\"yelow\">(</span>a.y <span class=\"light-blue\">-</span> b.y<span class=\"yelow\">)</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  n = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span><span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>n<span class=\"purple\">]</span>.x <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>n<span class=\"purple\">]</span>.y<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    n<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">int</span> nr = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.x <span class=\"light-blue\">&gt;</span> 0 <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.y <span class=\"light-blue\">&gt;</span> 0<span class=\"yelow\">)</span>\n      nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> nr <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">double</span> maxi = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n <span class=\"light-blue\">-</span> 1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = i <span class=\"light-blue\">+</span> 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"purple\">double</span> d = dist<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>d <span class=\"light-blue\">&gt;</span> maxi<span class=\"yelow\">)</span>\n        maxi = d<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> maxi<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 12,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">fractii.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">fractii.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">struct</span> fractie<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> numarator<span class=\"light-blue\">,</span> numitor<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> cmmdc<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>b<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        <span class=\"purple\">int</span> r=a<span class=\"light-blue\">%</span>b<span class=\"light-blue\">;</span>\n        a=b<span class=\"light-blue\">;</span>\n        b=r<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> a<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> cmmmc<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">return</span> <span class=\"yelow\">(</span>a<span class=\"light-blue\">*</span>b<span class=\"yelow\">)</span>/cmmdc<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>b<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> fractie v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.numarator <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.numitor<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> cerinta1<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> fractie v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> cnt = 0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span>i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>cmmdc<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.numarator<span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.numitor<span class=\"yelow\">)</span> == 1<span class=\"yelow\">)</span>\n            cnt<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> cnt<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> cerinta2<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> fractie v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> multiplu = v<span class=\"purple\">[</span>1<span class=\"purple\">]</span>.numitor<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=2<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        multiplu = cmmmc<span class=\"yelow\">(</span>multiplu<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.numitor<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> multiplu<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    citire<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cerinta1<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cerinta2<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 13,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">struct</span> cerc<span class=\"yelow\">{</span>\n    <span class=\"purple\">double</span> x<span class=\"light-blue\">,</span>y<span class=\"light-blue\">,</span>r<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> cerc v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.x<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.y<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.r<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> ordonare<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> cerc v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.r<span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>.r<span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n        cerc aux=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> cerc v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>'<span class=\"yelow\">(</span>'<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.x<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>'<span class=\"light-blue\">,</span>'<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.y<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>'<span class=\"light-blue\">,</span>'<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.r<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>'<span class=\"yelow\">)</span>'<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> numarare<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> cerc v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> k=0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.x==v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.y<span class=\"yelow\">)</span> k<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> k<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    citire<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    ordonare<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    afis<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>numarare<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 14,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip5.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip5.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">struct</span> produs<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> cod<span class=\"light-blue\">,</span> pret<span class=\"light-blue\">,</span> cantitate<span class=\"light-blue\">;</span>\n    <span class=\"purple\">char</span> denumire<span class=\"purple\">[</span>21<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> produs v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n    <span class=\"red\">fin</span>.get<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.cod <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.pret <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.cantitate<span class=\"light-blue\">;</span>\n        <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.denumire<span class=\"light-blue\">;</span>\n        <span class=\"red\">fin</span>.get<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> cerinta1<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> produs v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">bool</span> ok = 0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span>i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.cantitate <span class=\"light-blue\">&gt;</span> 10<span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>ok==0<span class=\"yelow\">)</span>\n                <span class=\"yelow\">{</span><span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.denumire<span class=\"light-blue\">;</span>\n                 ok=1<span class=\"light-blue\">;</span>\n                <span class=\"yelow\">}</span>\n            else <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">, </span><span class=\"orange\">&quot;</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.denumire<span class=\"light-blue\">;</span>\n\n    <span class=\"yelow\">}</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>ok == 0<span class=\"yelow\">)</span> <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">NU EXISTA!</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> ordonare<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> produs v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.pret <span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>.pret<span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n        produs aux=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> produs v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.cod<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.denumire<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.pret<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.cantitate<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> total<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> produs v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n\n    <span class=\"purple\">int</span> t = 0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n\n        t = t<span class=\"light-blue\">+</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.cantitate <span class=\"light-blue\">*</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.pret<span class=\"light-blue\">;</span>\n\n    <span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> t<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    citire<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    cerinta1<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    ordonare<span class=\"yelow\">(</span>n <span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    afis<span class=\"yelow\">(</span>n <span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> total<span class=\"yelow\">(</span>n <span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 15,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iomanip</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">elevi.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">elevi.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">struct</span> elev<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> note<span class=\"purple\">[</span>6<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">char</span> nume<span class=\"purple\">[</span>21<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">double</span> media<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> elev v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n    <span class=\"red\">fin</span>.get<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n       <span class=\"purple\">int</span> nr=0<span class=\"light-blue\">,</span>s=0<span class=\"light-blue\">;</span>\n       <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span> j<span class=\"light-blue\">&lt;</span>=5<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n           <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.note<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"red\">fin</span>.get<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.note<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">!</span>=0<span class=\"yelow\">)</span>\n            <span class=\"yelow\">{</span>\n            nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n            s=s<span class=\"light-blue\">+</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.note<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n            <span class=\"yelow\">}</span>\n        <span class=\"yelow\">}</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr<span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n            v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.media=1.0<span class=\"light-blue\">*</span>s/nr<span class=\"light-blue\">;</span>\n       else v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.media=0<span class=\"light-blue\">;</span>\n        <span class=\"red\">fin</span>.get<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.nume<span class=\"light-blue\">,</span> 20<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n        <span class=\"red\">fin</span>.get<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> ordonare<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> elev v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.media <span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>.media<span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n        elev aux=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> ordonare2<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> elev v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strcmp<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.nume<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>.nume<span class=\"yelow\">)</span><span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n        elev aux=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> elev v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>fixed<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>setprecision<span class=\"yelow\">(</span>2<span class=\"yelow\">)</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.media<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>.nume<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    citire<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    ordonare<span class=\"yelow\">(</span>n <span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    afis<span class=\"yelow\">(</span>n <span class=\"light-blue\">,</span> v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    ordonare2<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span>v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>afis<span class=\"yelow\">(</span>n<span class=\"light-blue\">,</span>v<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 16,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span> s<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n <span class=\"light-blue\">,</span>x<span class=\"light-blue\">,</span> maxi<span class=\"light-blue\">;</span>\n\n<span class=\"purple\">int</span> sumacif<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"purple\">int</span> c<span class=\"light-blue\">,</span> sum=0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>c=x<span class=\"light-blue\">%</span>10<span class=\"light-blue\">;</span>\n     sum=sum<span class=\"light-blue\">+</span>c<span class=\"light-blue\">;</span>\n       x=x/10<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> sum<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        s<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=sumacif<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>s<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>s<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>maxi<span class=\"yelow\">)</span> maxi=s<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>s<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==maxi<span class=\"yelow\">)</span> <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 17,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span> n <span class=\"light-blue\">,</span>x<span class=\"light-blue\">,</span>sum=0<span class=\"light-blue\">,</span>nr=0 <span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> ordonare <span class=\"yelow\">(</span><span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n        <span class=\"purple\">int</span> aux=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>i<span class=\"light-blue\">%</span>2<span class=\"light-blue\">!</span>=0<span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n        sum=sum<span class=\"light-blue\">+</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n\n    <span class=\"yelow\">}</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>1.0<span class=\"light-blue\">*</span>sum/nr<span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\nordonare<span class=\"yelow\">(</span>v<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\nx=v<span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=2<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">!</span>=x<span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n    x=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 18,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span> n <span class=\"light-blue\">,</span> ok=1 <span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> cmmdc<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"light-blue\">,</span><span class=\"purple\">int</span> y<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">!</span>=y<span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">&gt;</span>y<span class=\"yelow\">)</span> x=x<span class=\"light-blue\">-</span>y<span class=\"light-blue\">;</span>\n    else y=y<span class=\"light-blue\">-</span>x<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> x<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>   <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n   <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>cmmdc<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">!</span>=1<span class=\"yelow\">)</span> ok=0<span class=\"light-blue\">;</span>\n\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>ok==1<span class=\"yelow\">)</span> <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">DA</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\nelse <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">NU</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>cmmdc<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">!</span>=1<span class=\"yelow\">)</span>\n      <span class=\"yelow\">{</span>\n         <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>2<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n              v<span class=\"purple\">[</span>j<span class=\"light-blue\">-</span>1<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n         n<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\n      <span class=\"yelow\">}</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span><span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 19,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span> n <span class=\"light-blue\">,</span> ok=1 <span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> nrcif<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"purple\">int</span> c<span class=\"light-blue\">,</span> nr=0<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x==0<span class=\"yelow\">)</span> nr=1<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>c=x<span class=\"light-blue\">%</span>10<span class=\"light-blue\">;</span>\n     nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n       x=x/10<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> nr<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>  <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n   <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n   <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&gt;</span>=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span><span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n   <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span><span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrcif<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 20,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> x<span class=\"light-blue\">,</span>y<span class=\"light-blue\">,</span>nr=0<span class=\"light-blue\">,</span>a<span class=\"light-blue\">,</span>b<span class=\"light-blue\">,</span>ok=0<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> p10<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>n==0<span class=\"yelow\">)</span> <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>n<span class=\"yelow\">)</span>\n <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>n<span class=\"light-blue\">%</span>10==0<span class=\"yelow\">)</span>\n <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n else n/=10<span class=\"light-blue\">;</span>\n <span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> verif<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a==0 <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> b==0<span class=\"yelow\">)</span> <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>a<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a==b<span class=\"yelow\">)</span><span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\nelse a/=10<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>x<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>p10<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n\n<span class=\"light-blue\">while</span><span class=\"yelow\">(</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>y<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>p10<span class=\"yelow\">(</span>y<span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span> nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>verif<span class=\"yelow\">(</span>x<span class=\"light-blue\">,</span>y<span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>ok==0<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>ok=1<span class=\"light-blue\">;</span> a=x<span class=\"light-blue\">;</span> b=y<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n    x=y<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nr<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>ok==1<span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>a<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>b<span class=\"light-blue\">;</span>\n    else <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">NU EXISTA</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n   "
  },
  {
    "id": 21,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">date.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">date.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span>fr<span class=\"purple\">[</span>10<span class=\"purple\">]</span><span class=\"light-blue\">,</span>x<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> elim<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"purple\">int</span> aux=0<span class=\"light-blue\">,</span>p=1<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>n<span class=\"light-blue\">&gt;</span>=10<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        aux=aux<span class=\"light-blue\">+</span>n<span class=\"light-blue\">%</span>10<span class=\"light-blue\">*</span>p<span class=\"light-blue\">;</span>\n        n/=10<span class=\"light-blue\">;</span>\n        p=p<span class=\"light-blue\">*</span>10<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    fr<span class=\"purple\">[</span>n<span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> aux<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>x<span class=\"light-blue\">;</span>\n            <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>elim<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=9<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&gt;</span>=0<span class=\"light-blue\">;</span>i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>fr<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>i<span class=\"light-blue\">;</span>\n\n\n\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 22,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.txt</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span>k<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> ordonare <span class=\"yelow\">(</span><span class=\"purple\">int</span> v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n           <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n              <span class=\"purple\">int</span> aux=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n              v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n              v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n             <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> paritate<span class=\"yelow\">(</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>n<span class=\"light-blue\">&lt;</span>10<span class=\"yelow\">)</span> <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>n<span class=\"light-blue\">&gt;</span>=10<span class=\"yelow\">)</span>\n <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>n<span class=\"light-blue\">%</span>2<span class=\"light-blue\">!</span>=n/10<span class=\"light-blue\">%</span>2<span class=\"yelow\">)</span>\n       <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n else n/=10<span class=\"light-blue\">;</span>\n <span class=\"yelow\">}</span>\n <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> nrdiv<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> d=2<span class=\"light-blue\">;</span>d<span class=\"light-blue\">&lt;</span>=x/2<span class=\"light-blue\">;</span>d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">%</span>d==0<span class=\"yelow\">)</span>\n       nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr<span class=\"light-blue\">&gt;</span>=k<span class=\"yelow\">)</span> <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n else <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>k<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>paritate<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span> <span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">DA</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\nelse <span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">NU</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\nordonare<span class=\"yelow\">(</span>v<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> x=<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nrdiv<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1 <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span>x<span class=\"light-blue\">!</span>=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> <span class=\"yelow\">{</span><span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>x=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 23,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> vpar<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> cnt<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">%</span> 2 == 0<span class=\"yelow\">)</span> <span class=\"gray\">// stochez elementele pare intr-un vector separat pentru comoditate</span>\n      vpar<span class=\"purple\">[</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span>cnt<span class=\"purple\">]</span> = v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> cnt<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span> <span class=\"gray\">// sortez vectorul ce contine elementele pare in ord. desc.</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = i <span class=\"light-blue\">+</span> 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span>= cnt<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>vpar<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span> vpar<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n      <span class=\"yelow\">{</span>\n        <span class=\"purple\">int</span> aux = vpar<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        vpar<span class=\"purple\">[</span>i<span class=\"purple\">]</span> = vpar<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        vpar<span class=\"purple\">[</span>j<span class=\"purple\">]</span> = aux<span class=\"light-blue\">;</span>\n      <span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= cnt<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> vpar<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">bool</span> isSupraPerfect<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> s = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> d = 1<span class=\"light-blue\">;</span> d <span class=\"light-blue\">&lt;</span>= x / 2<span class=\"light-blue\">;</span> d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> d == 0<span class=\"yelow\">)</span>\n      s <span class=\"light-blue\">+</span>= d<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>s <span class=\"light-blue\">&gt;</span> x<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">bool</span> ok = <span class=\"red\">false</span><span class=\"light-blue\">;</span> <span class=\"gray\">// presupun ca nu am niciun numar supraPerfect</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>isSupraPerfect<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> == <span class=\"blue\">true</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      ok = <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>ok == <span class=\"red\">false</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">NU EXISTA NUMERE SUPRAPERFECTE</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 24,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> f<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> primCif<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">&lt;</span> 10<span class=\"yelow\">)</span>\n      <span class=\"purple\">return</span> x<span class=\"light-blue\">;</span>\n    x /= 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> ok = <span class=\"blue\">true</span><span class=\"light-blue\">;</span> <span class=\"gray\">// presupun ca numerele sunt in ordine crescatoare</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"purple\">int</span> x<span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"light-blue\">;</span> <span class=\"gray\">// primul numar din cele n;</span>\n  <span class=\"purple\">int</span> prec = v<span class=\"purple\">[</span>0<span class=\"purple\">]</span> = x<span class=\"light-blue\">;</span> <span class=\"gray\">// precedentul pentru a vedea daca numerele sunt in ordine crescatoare</span>\n  f<span class=\"purple\">[</span>primCif<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span><span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    f<span class=\"purple\">[</span>primCif<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span> prec<span class=\"yelow\">)</span>\n      ok = <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n    else\n      prec = v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  ok == <span class=\"blue\">true</span> ? <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">Da</span><span class=\"orange\">&quot;</span> : <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">Nu</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span> <span class=\"gray\">// rezolvare cerinat_a</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 9<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&gt;</span>= 1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>f<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> i<span class=\"light-blue\">;</span>\n      f<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 25,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cifre.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cifre.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\nlong long n<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> fr<span class=\"purple\">[</span>10<span class=\"purple\">]</span><span class=\"light-blue\">,</span> sumacif<span class=\"light-blue\">,</span> maxi = <span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>n<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>maxi <span class=\"light-blue\">&lt;</span> n <span class=\"light-blue\">%</span> 10<span class=\"yelow\">)</span>\n      maxi = n <span class=\"light-blue\">%</span> 10<span class=\"light-blue\">;</span>\n    sumacif <span class=\"light-blue\">+</span>= n <span class=\"light-blue\">%</span> 10<span class=\"light-blue\">;</span>\n    fr<span class=\"purple\">[</span>n <span class=\"light-blue\">%</span> 10<span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    n /= 10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> sumacif <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> maxi <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> 10<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> fr<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 26,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numre.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">numere.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1000001<span class=\"purple\">]</span><span class=\"light-blue\">,</span> n<span class=\"light-blue\">,</span> x<span class=\"light-blue\">,</span> i<span class=\"light-blue\">,</span> j<span class=\"light-blue\">,</span> aux<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> fibo<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x == 1<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n  <span class=\"purple\">int</span> a = 1<span class=\"light-blue\">,</span> b = 1<span class=\"light-blue\">,</span> c<span class=\"light-blue\">;</span>\n  c = a <span class=\"light-blue\">+</span> b<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>c <span class=\"light-blue\">&lt;</span> x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    a = b<span class=\"light-blue\">;</span>\n    b = c<span class=\"light-blue\">;</span>\n    c = a <span class=\"light-blue\">+</span> b<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>c == x<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n  else\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>f <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>fibo<span class=\"yelow\">(</span>x<span class=\"yelow\">)</span> == 1<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      n<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n      v<span class=\"purple\">[</span>n<span class=\"purple\">]</span> = x<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span>j = i <span class=\"light-blue\">+</span> 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n      <span class=\"yelow\">{</span>\n        aux = v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> = v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span> = aux<span class=\"light-blue\">;</span>\n      <span class=\"yelow\">}</span>\n  <spa"
  },
  {
    "id": 27,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1000001<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>x<span class=\"light-blue\">,</span>i<span class=\"light-blue\">,</span>j<span class=\"light-blue\">,</span>aux<span class=\"light-blue\">,</span>k<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span><span class=\"yelow\">(</span>i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        f<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>k<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span><span class=\"yelow\">(</span>i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n     <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>/10<span class=\"light-blue\">%</span>10<span class=\"light-blue\">%</span>2==1<span class=\"yelow\">)</span>\n           <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  aux=v<span class=\"purple\">[</span>k<span class=\"purple\">]</span><span class=\"light-blue\">;</span>v<span class=\"purple\">[</span>k<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>k<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"light-blue\">;</span>v<span class=\"purple\">[</span>k<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span><span class=\"yelow\">(</span>i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 28,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip2.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip2.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>nr=0<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> suma <span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"purple\">int</span> s=0<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span> s=s<span class=\"light-blue\">+</span>x<span class=\"light-blue\">%</span>10<span class=\"light-blue\">;</span>\n    x=x/10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> s<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> ordonare<span class=\"yelow\">(</span><span class=\"purple\">int</span> v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"purple\">bool</span> ok<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">do</span><span class=\"yelow\">{</span>   ok = <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n                swap<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n                ok = <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n            <span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span><span class=\"light-blue\">while</span><span class=\"yelow\">(</span><span class=\"light-blue\">!</span>ok<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> prim<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">&lt;</span>2<span class=\"yelow\">)</span>\n        <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x==2<span class=\"yelow\">)</span>\n        <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">%</span>2==0<span class=\"yelow\">)</span>\n        <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> d=3<span class=\"light-blue\">;</span> d<span class=\"light-blue\">*</span>d<span class=\"light-blue\">&lt;</span>=x<span class=\"light-blue\">;</span>d=d<span class=\"light-blue\">+</span>2<span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">%</span>d==0<span class=\"yelow\">)</span>\n        <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    ordonare<span class=\"yelow\">(</span>v<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = n<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&gt;</span>=1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>suma<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">%</span>2==0<span class=\"yelow\">)</span>\n           <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n           <span class=\"yelow\">{</span><span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n            nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr==0<span class=\"yelow\">)</span> <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">Nu exista</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 29,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">vector.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">vector.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>nr=0<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> nr_cifra <span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span> <span class=\"purple\">int</span> cif=x<span class=\"light-blue\">%</span>2<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>cif==1<span class=\"yelow\">)</span> nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    x=x/2<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> nr<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> prima_cifra <span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n<span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">&gt;</span>=10<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span> x=x/10<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> x<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> ordonare1<span class=\"yelow\">(</span><span class=\"purple\">int</span> v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"purple\">bool</span> ok<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">do</span><span class=\"yelow\">{</span>   ok = <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prima_cifra<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> <span class=\"light-blue\">&lt;</span> prima_cifra<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n                swap<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n                ok = <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n            <span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span><span class=\"light-blue\">while</span><span class=\"yelow\">(</span><span class=\"light-blue\">!</span>ok<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> ordonare2<span class=\"yelow\">(</span><span class=\"purple\">int</span> v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"purple\">bool</span> ok<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">do</span><span class=\"yelow\">{</span>   ok = <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n            <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr_cifra<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> <span class=\"light-blue\">&gt;</span> nr_cifra<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">)</span>\n               <span class=\"yelow\">{</span>\n                swap<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n                ok = <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n               <span class=\"yelow\">}</span>\n            else <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr_cifra<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> == nr_cifra<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">)</span>\n                    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n                        <span class=\"yelow\">{</span>swap<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n                        ok = <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n                        <span class=\"yelow\">}</span>\n            <span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span><span class=\"light-blue\">while</span><span class=\"yelow\">(</span><span class=\"light-blue\">!</span>ok<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    ordonare1<span class=\"yelow\">(</span>v<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n           <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    ordonare2<span class=\"yelow\">(</span>v<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 30,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tablou.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tablou.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>1001<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>a=<span class=\"light-blue\">-</span>1<span class=\"light-blue\">,</span>b=<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>\n\n<span class=\"blue\">void</span> ordonare<span class=\"yelow\">(</span><span class=\"purple\">int</span> v<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"purple\">bool</span> ok<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">do</span><span class=\"yelow\">{</span>   ok = <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">{</span>\n                swap<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n                ok = <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n            <span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span><span class=\"light-blue\">while</span><span class=\"yelow\">(</span><span class=\"light-blue\">!</span>ok<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    ordonare<span class=\"yelow\">(</span>v<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n           <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">%</span>2==0<span class=\"yelow\">)</span>\n           <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a==<span class=\"light-blue\">-</span>1<span class=\"yelow\">)</span><span class=\"yelow\">{</span>a=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>b=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n           else b=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a<span class=\"light-blue\">!</span>=<span class=\"light-blue\">-</span>1<span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>b<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>a<span class=\"light-blue\">;</span>\n        <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 31,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> fr<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> cntElementePrime<span class=\"light-blue\">;</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n      fr<span class=\"purple\">[</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">bool</span> isPrim<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x == 1<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> <span class=\"red\">false</span><span class=\"light-blue\">;</span> <span class=\"gray\">// nu e prim</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> 2 == 0 <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> x <span class=\"light-blue\">!</span>= 2<span class=\"yelow\">)</span>\n    <span class=\"purple\">return</span> <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> d = 2<span class=\"light-blue\">;</span> d <span class=\"light-blue\">&lt;</span>= x / 2<span class=\"light-blue\">;</span> d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> d == 0<span class=\"yelow\">)</span>\n      <span class=\"purple\">return</span> <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n\n  <span class=\"purple\">return</span> <span class=\"blue\">true</span><span class=\"light-blue\">;</span> <span class=\"gray\">// nu are divizori inafara de 1 si el insasi deci e nr prim</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 2<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = n <span class=\"light-blue\">+</span> 2 <span class=\"light-blue\">-</span> i<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>isPrim<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">)</span>\n        cntElementePrime<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> cntElementePrime<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = <span class=\"light-blue\">-</span>99<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= 99<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>fr<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> i <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 32,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">Matrice.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">Matrice.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> suma<span class=\"light-blue\">,</span> n<span class=\"light-blue\">,</span> p<span class=\"light-blue\">,</span> v<span class=\"light-blue\">,</span> l<span class=\"light-blue\">,</span> c<span class=\"light-blue\">;</span>\n\n<span class=\"purple\">bool</span> isPerfect<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> s = 0<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> d = 1<span class=\"light-blue\">;</span> d <span class=\"light-blue\">&lt;</span>= x / 2<span class=\"light-blue\">;</span> d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>x <span class=\"light-blue\">%</span> d == 0<span class=\"yelow\">)</span>\n      s <span class=\"light-blue\">+</span>= d<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> x == s ? <span class=\"blue\">true</span> : <span class=\"red\">false</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> p<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= p<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> l <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> c<span class=\"light-blue\">;</span>\n    a<span class=\"purple\">[</span>l<span class=\"purple\">]</span><span class=\"purple\">[</span>c<span class=\"purple\">]</span> = v<span class=\"light-blue\">;</span>\n    suma <span class=\"light-blue\">+</span>= v<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">\\n</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  isPerfect<span class=\"yelow\">(</span>suma<span class=\"yelow\">)</span> == <span class=\"blue\">true</span> ? <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">DA</span><span class=\"orange\">&quot;</span> : <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">NU</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  cerinta_a<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  cerinta_b<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 33,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>nr<span class=\"light-blue\">,</span>s<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n        <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> prim<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> d=1<span class=\"light-blue\">;</span>d<span class=\"light-blue\">&lt;</span>=x<span class=\"light-blue\">;</span>d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">%</span>d==0<span class=\"yelow\">)</span><span class=\"yelow\">{</span>nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr==2<span class=\"yelow\">)</span><span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> palindrom<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> ogl=0<span class=\"light-blue\">,</span>aux=x<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            ogl=ogl<span class=\"light-blue\">*</span>10<span class=\"light-blue\">+</span>x<span class=\"light-blue\">%</span>10<span class=\"light-blue\">;</span>\n            x/=10<span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>ogl==aux<span class=\"yelow\">)</span> <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n        else <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> citire<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>    <span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n         <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n               <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n                  nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n         <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nr<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>i<span class=\"light-blue\">&lt;</span>j and i<span class=\"light-blue\">+</span>j<span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">+</span>1<span class=\"yelow\">)</span>\n                 s=s<span class=\"light-blue\">+</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n   <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>palindrom<span class=\"yelow\">(</span>s<span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n      <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">DA</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n   else <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">NU</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 34,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">matrice.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">matrice.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>maxim<span class=\"light-blue\">,</span>s<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n        <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span>\n           <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n             <span class=\"yelow\">{</span>\n              <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n              <span class=\"yelow\">}</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n       <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> citire<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n     <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>n<span class=\"light-blue\">-</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>maxim<span class=\"yelow\">)</span>\n          maxim=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>n<span class=\"light-blue\">-</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>maxim<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n                 <span class=\"yelow\">{</span>\n                     <span class=\"purple\">int</span> aux=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n                     a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>i<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n                     a<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n                 <span class=\"yelow\">}</span>\n   afis<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 35,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">matrice.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">matrice.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"light-blue\">,</span>maxim<span class=\"light-blue\">,</span>minim<span class=\"light-blue\">,</span>l1<span class=\"light-blue\">,</span>c1<span class=\"light-blue\">,</span>l2<span class=\"light-blue\">,</span>c2<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>m<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>m<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n        <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> m<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span>\n           <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n             <span class=\"yelow\">{</span>\n              <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n              <span class=\"yelow\">}</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n       <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> citire<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\nmaxim=minim=a<span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"light-blue\">;</span>l1=l2=c1=c2=1<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n     <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>maxim<span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span>maxim=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>l1=i<span class=\"light-blue\">;</span>c1=j<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n       <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span>minim<span class=\"yelow\">)</span>\n       <span class=\"yelow\">{</span>minim=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>l2=i<span class=\"light-blue\">;</span>c2=j<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n     <span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> aux=a<span class=\"purple\">[</span>l1<span class=\"purple\">]</span><span class=\"purple\">[</span>c1<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\na<span class=\"purple\">[</span>l1<span class=\"purple\">]</span><span class=\"purple\">[</span>c1<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>l2<span class=\"purple\">]</span><span class=\"purple\">[</span>c2<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\na<span class=\"purple\">[</span>l2<span class=\"purple\">]</span><span class=\"purple\">[</span>c2<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\nafis<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"gray\">//refacem matricea initiala din care se cere stergerea</span>\naux=a<span class=\"purple\">[</span>l1<span class=\"purple\">]</span><span class=\"purple\">[</span>c1<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\na<span class=\"purple\">[</span>l1<span class=\"purple\">]</span><span class=\"purple\">[</span>c1<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>l2<span class=\"purple\">]</span><span class=\"purple\">[</span>c2<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\na<span class=\"purple\">[</span>l2<span class=\"purple\">]</span><span class=\"purple\">[</span>c2<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=c2<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"light-blue\">-</span>1<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\nm<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=l2<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        a<span class=\"purple\">[</span>i<span class=\"light-blue\">-</span>1<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\nn<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\nafis<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 36,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"light-blue\">,</span>nr<span class=\"light-blue\">,</span>s<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>m<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>m<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n        <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> perfect<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"purple\">int</span> s=0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> d=1<span class=\"light-blue\">;</span>d<span class=\"light-blue\">&lt;</span>=x/2<span class=\"light-blue\">;</span>d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">%</span>d==0<span class=\"yelow\">)</span>\n    s=s<span class=\"light-blue\">+</span>d<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x==s<span class=\"yelow\">)</span> <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n    else <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> citire<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n         <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>perfect<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n            nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nr<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    s=s<span class=\"light-blue\">+</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"light-blue\">%</span>10<span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>s<span class=\"light-blue\">;</span>\n   <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 37,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip3.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">tip3.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"light-blue\">,</span>l<span class=\"light-blue\">,</span>nr<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>m<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>   <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>m<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n        <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> prim<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> d=1<span class=\"light-blue\">;</span>d<span class=\"light-blue\">&lt;</span>=x<span class=\"light-blue\">;</span>d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">%</span>d==0<span class=\"yelow\">)</span><span class=\"yelow\">{</span>nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr==2<span class=\"yelow\">)</span><span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> palindrom<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"purple\">int</span> ogl=0<span class=\"light-blue\">,</span>aux=x<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            ogl=ogl<span class=\"light-blue\">*</span>10<span class=\"light-blue\">+</span>x<span class=\"light-blue\">%</span>10<span class=\"light-blue\">;</span>\n            x/=10<span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>ogl==aux<span class=\"yelow\">)</span> <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n        else <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> citire<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n         <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>palindrom<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n            <span class=\"yelow\">{</span>l=i<span class=\"light-blue\">;</span>j=m<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>i=n<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>l<span class=\"light-blue\">!</span>=0<span class=\"yelow\">)</span> <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>l<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\nelse <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">NU EXISTA</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span> nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=2<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>m<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span> nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=m<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&gt;</span>=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>n<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span> nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=m<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&gt;</span>=2<span class=\"light-blue\">;</span>i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span> nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nr<span class=\"light-blue\">;</span>\n   <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 38,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">matrice.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">matrice.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"light-blue\">,</span>l<span class=\"light-blue\">,</span>nr1<span class=\"light-blue\">,</span>maxim<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>m<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>   <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>m<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n        <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> citire<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>m<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>nr1=0<span class=\"light-blue\">;</span>\n     <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n         <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span>==1<span class=\"yelow\">)</span>\n            nr1<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n     <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr1<span class=\"light-blue\">&gt;</span>maxim<span class=\"yelow\">)</span><span class=\"yelow\">{</span>maxim=nr1<span class=\"light-blue\">;</span>l=i<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>l<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n <span class=\"yelow\">{</span><span class=\"purple\">int</span> y=0<span class=\"light-blue\">,</span>p=1<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&gt;</span>=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n     <span class=\"yelow\">{</span>\n         y=y<span class=\"light-blue\">+</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">*</span>p<span class=\"light-blue\">;</span>\n         p=p<span class=\"light-blue\">*</span>2<span class=\"light-blue\">;</span>\n     <span class=\"yelow\">}</span>\n     <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>y<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n\n   <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 39,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">linie.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">linie.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> a<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>nrprime<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>maxim<span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>100001<span class=\"purple\">]</span><span class=\"light-blue\">,</span>m<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> prim<span class=\"yelow\">(</span><span class=\"purple\">int</span> x<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>   <span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> d=1<span class=\"light-blue\">;</span>d<span class=\"light-blue\">&lt;</span>=x<span class=\"light-blue\">;</span>d<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>x<span class=\"light-blue\">%</span>d==0<span class=\"yelow\">)</span><span class=\"yelow\">{</span>nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr==2<span class=\"yelow\">)</span><span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"purple\">[</span><span class=\"purple\">]</span><span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> <span class=\"purple\">int</span> <span class=\"light-blue\">&</span>n<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>   <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>   nrprime<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=0<span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n           <span class=\"yelow\">{</span>\n            <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>prim<span class=\"yelow\">(</span>a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n                nrprime<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n           <span class=\"yelow\">}</span>\n       <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nrprime<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>maxim<span class=\"yelow\">)</span>\n           maxim=nrprime<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> citire<span class=\"yelow\">(</span>a<span class=\"light-blue\">,</span>n<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>maxim<span class=\"light-blue\">!</span>=0<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span><span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nrprime<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==maxim<span class=\"yelow\">)</span>\n         <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>i<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  else <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">NU EXISTA</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>m<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span> v<span class=\"purple\">[</span>m<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=2<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>m<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span> v<span class=\"purple\">[</span>m<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>n<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&gt;</span>=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n     <span class=\"yelow\">{</span>m<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span> v<span class=\"purple\">[</span>m<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>n<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&gt;</span>=2<span class=\"light-blue\">;</span>i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>m<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span> v<span class=\"purple\">[</span>m<span class=\"purple\">]</span>=a<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>1<span class=\"purple\">]</span><span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n          <span class=\"yelow\">{</span><span class=\"purple\">int</span> aux=v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span>=aux<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=m<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n       <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 40,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> s<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"light-blue\">*</span>p<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span>.get<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span>100<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=strlen<span class=\"yelow\">(</span>s<span class=\"yelow\">)</span><span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strchr<span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">0123456789</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">,</span>s<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>               <span class=\"gray\">//if(s[i]>='0' && s[i]<='9')</span>\n           <span class=\"yelow\">{</span>strcpy<span class=\"yelow\">(</span>s<span class=\"light-blue\">+</span>i<span class=\"light-blue\">,</span>s<span class=\"light-blue\">+</span>i<span class=\"light-blue\">+</span>1<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>               <span class=\"gray\">//for(int j=i+1;j<=strlen(s);j++) s[j-1]=s[j];</span>\n            i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\n           <span class=\"yelow\">}</span>\n      <span class=\"yelow\">}</span>\n <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>s<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n p=strtok<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>p<span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>\n <span class=\"yelow\">{</span>   <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strchr<span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">aeiouAEIOU</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">,</span>p<span class=\"purple\">[</span>0<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>\n        <span class=\"yelow\">{</span>\n            <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>p<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span> nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n        <span class=\"yelow\">}</span>\n     p=strtok<span class=\"yelow\">(</span>NULL<span class=\"light-blue\">,</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"yelow\">}</span>\n <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr==0<span class=\"yelow\">)</span> <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">nu sunt</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 41,
    "text": ""
  },
  {
    "id": 42,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">sir.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">sir.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> s<span class=\"purple\">[</span>251<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span>.get<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span>250<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=strlen<span class=\"yelow\">(</span>s<span class=\"yelow\">)</span><span class=\"light-blue\">-</span>2<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>s<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==s<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n           <span class=\"yelow\">{</span><span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>s<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>s<span class=\"purple\">[</span>i<span class=\"light-blue\">+</span>1<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n            strcpy<span class=\"yelow\">(</span>s<span class=\"light-blue\">+</span>i<span class=\"light-blue\">,</span>s<span class=\"light-blue\">+</span>i<span class=\"light-blue\">+</span>2<span class=\"yelow\">)</span><span class=\"light-blue\">;</span> <span class=\"gray\">//for(int j=i+2;j<=strlen(s);j++) s[j-2]=s[j];</span>\n            i<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\n           <span class=\"yelow\">}</span>\n      <span class=\"yelow\">}</span>\n <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>s<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n     <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 43,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> s<span class=\"purple\">[</span>71<span class=\"purple\">]</span><span class=\"light-blue\">,</span>t<span class=\"purple\">[</span>71<span class=\"purple\">]</span><span class=\"light-blue\">,</span><span class=\"light-blue\">*</span>p<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> nr=0<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span>.get<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span>70<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n strcpy<span class=\"yelow\">(</span>t<span class=\"light-blue\">,</span>s<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n strlwr<span class=\"yelow\">(</span>t<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=strlen<span class=\"yelow\">(</span>t<span class=\"yelow\">)</span><span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>t<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==t<span class=\"purple\">[</span>0<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n            nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n      <span class=\"yelow\">}</span>\n <span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nr<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n strcpy<span class=\"yelow\">(</span>t<span class=\"light-blue\">,</span>s<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=strlen<span class=\"yelow\">(</span>t<span class=\"yelow\">)</span><span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>t<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>='A' <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> t<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span>='Z'<span class=\"yelow\">)</span>\n        t<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=t<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">+</span>32<span class=\"light-blue\">;</span>\n    else\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>t<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>='a' <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> t<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span>='z'<span class=\"yelow\">)</span>\n            t<span class=\"purple\">[</span>i<span class=\"purple\">]</span>=t<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">-</span>32<span class=\"light-blue\">;</span>\n  <span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>t<span class=\"light-blue\">;</span>\np=strtok<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">while</span><span class=\"yelow\">(</span>p<span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>\n <span class=\"yelow\">{</span> <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strchr<span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">aeiouAEIOU</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">,</span>p<span class=\"purple\">[</span>0<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>\n         <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>tolower<span class=\"yelow\">(</span>p<span class=\"purple\">[</span>0<span class=\"purple\">]</span><span class=\"yelow\">)</span>==tolower<span class=\"yelow\">(</span>p<span class=\"purple\">[</span>strlen<span class=\"yelow\">(</span>p<span class=\"yelow\">)</span><span class=\"light-blue\">-</span>1<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">)</span>\n            <span class=\"yelow\">{</span>strcpy<span class=\"yelow\">(</span>p<span class=\"light-blue\">,</span>p<span class=\"light-blue\">+</span>1<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n             p<span class=\"purple\">[</span>strlen<span class=\"yelow\">(</span>p<span class=\"yelow\">)</span><span class=\"light-blue\">-</span>1<span class=\"purple\">]</span>='\\0'<span class=\"light-blue\">;</span>\n             nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n             <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>p<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n             <span class=\"yelow\">}</span>\n   p=strtok<span class=\"yelow\">(</span>NULL<span class=\"light-blue\">,</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"yelow\">}</span>\n   <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nr==0<span class=\"yelow\">)</span>\n   <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">NU EXISTA</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 44,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvinte.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvinte.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>31<span class=\"purple\">]</span><span class=\"light-blue\">,</span>cuv<span class=\"purple\">[</span>31<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span>nrmaxv<span class=\"light-blue\">,</span>nrv<span class=\"light-blue\">,</span>fr<span class=\"purple\">[</span>256<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>nrv=0<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=0<span class=\"light-blue\">;</span> j<span class=\"light-blue\">&lt;</span>strlen<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strchr<span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">aeiou</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>\n       nrv<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">if</span><span class=\"yelow\">(</span>nrv<span class=\"light-blue\">&gt;</span>nrmaxv<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>nrmaxv=nrv<span class=\"light-blue\">;</span>\n     strcpy<span class=\"yelow\">(</span>cuv<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>cuv<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=0<span class=\"light-blue\">;</span> j<span class=\"light-blue\">&lt;</span>strlen<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      fr<span class=\"purple\">[</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">char</span> c='a'<span class=\"light-blue\">;</span> c<span class=\"light-blue\">&lt;</span>='z'<span class=\"light-blue\">;</span> c<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>fr<span class=\"purple\">[</span>c<span class=\"purple\">]</span><span class=\"light-blue\">!</span>=0<span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>c<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 45,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvinte.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvinte.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>31<span class=\"purple\">]</span><span class=\"light-blue\">,</span>s<span class=\"purple\">[</span>256<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span>.get<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span>255<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> <span class=\"light-blue\">*</span>p<span class=\"light-blue\">;</span>\np=strtok<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">while</span><span class=\"yelow\">(</span>p<span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n\n    strcpy<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>n<span class=\"purple\">]</span><span class=\"light-blue\">,</span>p<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    n<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    p=strtok<span class=\"yelow\">(</span>NULL<span class=\"light-blue\">,</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n <span class=\"purple\">int</span> nrlmare=0<span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>0<span class=\"purple\">]</span><span class=\"light-blue\">&gt;</span>='A' and v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"purple\">[</span>0<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span>='Z'<span class=\"yelow\">)</span>nrlmare<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrlmare<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>'\\n'<span class=\"light-blue\">;</span>\n <span class=\"purple\">int</span> lmax=0<span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strlen<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">&gt;</span>lmax<span class=\"yelow\">)</span>\n            lmax=strlen<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strlen<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>==lmax<span class=\"yelow\">)</span><span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 46,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvant3.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvant3.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> s<span class=\"purple\">[</span>256<span class=\"purple\">]</span><span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>31<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n <span class=\"purple\">char</span> <span class=\"light-blue\">*</span>p<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> nrc<span class=\"light-blue\">,</span>nrs<span class=\"light-blue\">,</span>n<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span>.get<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span>255<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>strlen<span class=\"yelow\">(</span>s<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>s<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==' '<span class=\"yelow\">)</span>nrs<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n else nrc<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrc<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrs<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n p=strtok<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span><span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">while</span><span class=\"yelow\">(</span>p<span class=\"light-blue\">!</span>=NULL<span class=\"yelow\">)</span>\n <span class=\"yelow\">{</span>   strcpy<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>n<span class=\"purple\">]</span><span class=\"light-blue\">,</span>p<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n     n<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n     p=strtok<span class=\"yelow\">(</span>NULL<span class=\"light-blue\">,</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n <span class=\"yelow\">}</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span> j<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strcmp<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n         <span class=\"yelow\">{</span> <span class=\"purple\">char</span> aux<span class=\"purple\">[</span>255<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n           strcpy<span class=\"yelow\">(</span>aux<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n           strcpy<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n           strcpy<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">,</span>aux<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n         <span class=\"yelow\">}</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fin</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">fout</span>.close<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 47,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvinte.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">cuvinte.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"purple\">[</span>31<span class=\"purple\">]</span><span class=\"light-blue\">,</span>t<span class=\"purple\">[</span>31<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span>nr<span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    strcpy<span class=\"yelow\">(</span>t<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    strrev<span class=\"yelow\">(</span>t<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strcmp<span class=\"yelow\">(</span>t<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>==0<span class=\"yelow\">)</span>\n        nr<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nr<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=i<span class=\"light-blue\">+</span>1<span class=\"light-blue\">;</span> j<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strcmp<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">&gt;</span>0<span class=\"yelow\">)</span>\n         <span class=\"yelow\">{</span> <span class=\"purple\">char</span> aux<span class=\"purple\">[</span>255<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n           strcpy<span class=\"yelow\">(</span>aux<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n           strcpy<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n           strcpy<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">,</span>aux<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n         <span class=\"yelow\">}</span>\n         <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=0<span class=\"light-blue\">;</span> i<span class=\"light-blue\">&lt;</span>n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    strcpy<span class=\"yelow\">(</span>t<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    strrev<span class=\"yelow\">(</span>t<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>strcmp<span class=\"yelow\">(</span>t<span class=\"light-blue\">,</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>==0<span class=\"yelow\">)</span>\n        <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 48,
    "text": ""
  },
  {
    "id": 49,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span><span class=\"light-blue\">&lt;</span><span class=\"light-green\">cmath</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">atestat.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>11<span class=\"purple\">]</span><span class=\"light-blue\">,</span> n<span class=\"light-blue\">,</span> nrsol<span class=\"light-blue\">,</span> nrpare<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"red\">fin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">;</span><span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>nrsol<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"orange\">&quot;</span><span class=\"light-green\">Solutia numarul: </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrsol<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span><span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> j=1<span class=\"light-blue\">;</span>j<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n     <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==j<span class=\"yelow\">)</span> <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>'D'<span class=\"light-blue\">;</span>\n     else <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>'@'<span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> verif<span class=\"yelow\">(</span><span class=\"purple\">int</span> k<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=k<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span><span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>k<span class=\"purple\">]</span>==v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span> <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n     <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>k<span class=\"light-blue\">-</span>i==abs<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>k<span class=\"purple\">]</span><span class=\"light-blue\">-</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"yelow\">)</span>\n        <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> verifpare<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>  <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=2<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i=i<span class=\"light-blue\">+</span>2<span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">%</span>2==0<span class=\"yelow\">)</span>\n            <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n   <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> bk<span class=\"yelow\">(</span><span class=\"purple\">int</span> k<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span><span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> col=1<span class=\"light-blue\">;</span>col<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>col<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>   v<span class=\"purple\">[</span>k<span class=\"purple\">]</span>=col<span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>verif<span class=\"yelow\">(</span>k<span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>k==n<span class=\"yelow\">)</span>\n             <span class=\"yelow\">{</span>afis<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n              <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>verifpare<span class=\"yelow\">(</span><span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n                 nrpare<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n             <span class=\"yelow\">}</span>\n             else bk<span class=\"yelow\">(</span>k<span class=\"light-blue\">+</span>1<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    bk<span class=\"yelow\">(</span>1<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">fout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrsol<span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrpare<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 50,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span>n<span class=\"light-blue\">,</span>a<span class=\"light-blue\">,</span>b<span class=\"light-blue\">,</span>nrsol<span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"red\">cin</span><span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>n<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>a<span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span>b<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    nrsol<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>' '<span class=\"light-blue\">;</span>\n    <span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span><span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> verif<span class=\"yelow\">(</span><span class=\"purple\">int</span> k<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=k<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>k<span class=\"purple\">]</span>==v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n           <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n   <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>k<span class=\"purple\">]</span>==b<span class=\"yelow\">)</span>\n        <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>k<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n              <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==a<span class=\"yelow\">)</span>\n                  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n   <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>k<span class=\"purple\">]</span>==a<span class=\"yelow\">)</span>\n           <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=k<span class=\"light-blue\">-</span>1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n              <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span>==b<span class=\"yelow\">)</span>\n              <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n    <span class=\"purple\">return</span> 1<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> bk<span class=\"yelow\">(</span><span class=\"purple\">int</span> k<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span> <span class=\"light-blue\">for</span><span class=\"yelow\">(</span><span class=\"purple\">int</span> i=1<span class=\"light-blue\">;</span>i<span class=\"light-blue\">&lt;</span>=n<span class=\"light-blue\">;</span>i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>   v<span class=\"purple\">[</span>k<span class=\"purple\">]</span>=i<span class=\"light-blue\">;</span>\n        <span class=\"light-blue\">if</span><span class=\"yelow\">(</span>verif<span class=\"yelow\">(</span>k<span class=\"yelow\">)</span>==1<span class=\"yelow\">)</span>\n            <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>k==n<span class=\"yelow\">)</span> afis<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n            else bk<span class=\"yelow\">(</span>k<span class=\"light-blue\">+</span>1<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\nbk<span class=\"yelow\">(</span>1<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"red\">cout</span><span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span>nrsol<span class=\"light-blue\">;</span>\n<span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 101,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n\n<span class=\"purple\">int</span> produs<span class=\"yelow\">(</span><span class=\"purple\">int</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">int</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> <span class=\"purple\">int</span>erval<span class=\"light-blue\">,</span> p = 1<span class=\"light-blue\">;</span>\n  a <span class=\"light-blue\">&gt;</span> b ? <span class=\"purple\">int</span>erval = b : <span class=\"purple\">int</span>erval = a<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= <span class=\"purple\">int</span>erval<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>a <span class=\"light-blue\">%</span> i == 0 <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> b <span class=\"light-blue\">%</span> i == 0<span class=\"yelow\">)</span>\n      p <span class=\"light-blue\">*</span>= i<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> p<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> produs<span class=\"yelow\">(</span>20<span class=\"light-blue\">,</span> 12<span class=\"yelow\">)</span><span class=\"light-blue\">;</span> <span class=\"gray\">// 8</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 102 ,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">cstring</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">;</span>\n<span class=\"purple\">char</span> s<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">,</span> firstLine<span class=\"purple\">[</span>25<span class=\"purple\">]</span><span class=\"purple\">[</span>25<span class=\"purple\">]</span><span class=\"light-blue\">,</span> secondLine<span class=\"purple\">[</span>25<span class=\"purple\">]</span><span class=\"purple\">[</span>25<span class=\"purple\">]</span><span class=\"light-blue\">,</span> cntFirstLine<span class=\"light-blue\">,</span> cntSecondLine<span class=\"light-blue\">;</span>\n<span class=\"purple\">bool</span> ok1 = <span class=\"red\">false</span><span class=\"light-blue\">,</span> ok2 = <span class=\"red\">false</span><span class=\"light-blue\">;</span> <span class=\"gray\">// presupun ca ambele multimi sunt vide</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">cin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"red\">cin</span>.get<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span> <span class=\"gray\">// in asa fel evit backspace, pentru a putea trece la urmatoarea linie</span>\n  <span class=\"red\">cin</span>.get<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span> 101<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> rezolvare<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n\n  <span class=\"purple\">char</span> <span class=\"light-blue\">*</span>p = strtok<span class=\"yelow\">(</span>s<span class=\"light-blue\">,</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span>p <span class=\"light-blue\">!</span>= NULL<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>strlen<span class=\"yelow\">(</span>p<span class=\"yelow\">)</span> <span class=\"light-blue\">&lt;</span> n<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      strcpy<span class=\"yelow\">(</span>firstLine<span class=\"purple\">[</span>cntFirstLine<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span> p<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n      ok1 = <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n\n    else <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>strlen<span class=\"yelow\">(</span>p<span class=\"yelow\">)</span> <span class=\"light-blue\">&gt;</span> n<span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      strcpy<span class=\"yelow\">(</span>secondLine<span class=\"purple\">[</span>cntSecondLine<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"purple\">]</span><span class=\"light-blue\">,</span> p<span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n      ok2 = <span class=\"blue\">true</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n\n    p = strtok<span class=\"yelow\">(</span>NULL<span class=\"light-blue\">,</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> afis<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>ok1 == <span class=\"blue\">true</span> <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> ok2 == <span class=\"blue\">true</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> cntFirstLine<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> firstLine<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n    <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"blue\">endl</span><span class=\"light-blue\">;</span>\n\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> cntSecondLine<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> secondLine<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  else\n    <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">nu exista</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  rezolvare<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  afis<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },
  {
    "id": 103,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">bac.txt</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n1<span class=\"light-blue\">,</span> n2<span class=\"light-blue\">,</span> n3<span class=\"light-blue\">,</span> fr<span class=\"purple\">[</span>1000001<span class=\"purple\">]</span><span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>4<span class=\"purple\">]</span> = <span class=\"yelow\">{</span>0<span class=\"yelow\">}</span><span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n1 <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n2 <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n3<span class=\"light-blue\">;</span>\n  v<span class=\"purple\">[</span>1<span class=\"purple\">]</span> = n1<span class=\"light-blue\">;</span>\n  v<span class=\"purple\">[</span>2<span class=\"purple\">]</span> = n2<span class=\"light-blue\">;</span>\n  v<span class=\"purple\">[</span>3<span class=\"purple\">]</span> = n3<span class=\"light-blue\">;</span>\n  <span class=\"purple\">int</span> x<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">while</span> <span class=\"yelow\">(</span><span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> x<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    fr<span class=\"purple\">[</span>x<span class=\"purple\">]</span><span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> rezolvare<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> res<span class=\"purple\">[</span>4<span class=\"purple\">]</span> = <span class=\"yelow\">{</span>0<span class=\"yelow\">}</span><span class=\"light-blue\">,</span> cnt = 1<span class=\"light-blue\">;</span>\n\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = 101<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&gt;</span>= 10 <span class=\"light-blue\">&</span><span class=\"light-blue\">&</span> cnt <span class=\"light-blue\">&lt;</span>= 3<span class=\"light-blue\">;</span> j<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>fr<span class=\"purple\">[</span>j<span class=\"purple\">]</span> <span class=\"light-blue\">&gt;</span>= v<span class=\"purple\">[</span>cnt<span class=\"purple\">]</span><span class=\"yelow\">)</span>\n      res<span class=\"purple\">[</span>cnt<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"purple\">]</span> = j<span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>res<span class=\"purple\">[</span>3<span class=\"purple\">]</span> <span class=\"light-blue\">!</span>= 0<span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= 3<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n      <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> res<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n  <span class=\"yelow\">}</span>\n  else\n    <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\">nu exista</span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  rezolvare<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },


  {
    "id":500,
    "text": ""
  },
  {
    "id": 501,
    "text": "<"
  },
  {
    "id": 502,
    "text": ""
  },
  {
    "id": 503,
    "text": ""
  },
  {
    "id": 504,
    "text": ""
  },
  {
    "id": 505,
    "text": ""
  },
  {
    "id": 506,
    "text": ""
  },
  {
    "id": 507,
    "text": ""
  },
  {
    "id": 508,
    "text": ""
  },
  {
    "id": 509,
    "text": ""
  },
  {
    "id": 510,
    "text": ""
  },
  {
    "id": 1000,
    "text": "<pre class=\"codeAreaTxt\">\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">cin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">cin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"blue\">void</span> sortareaCuDouaForuri<span class=\"yelow\">(</span><span class=\"yelow\">)</span> <span class=\"gray\">// sort crescator, ptr a schimba in sort descrescator e nevoie de schimbat conditia la if pe \"<\"</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = i <span class=\"light-blue\">+</span> 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span> <span class=\"gray\">// metoda celor trei pahare ptr interschimbarea a doua elemente</span>\n      <span class=\"yelow\">{</span>\n        <span class=\"purple\">int</span> aux = v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> = v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n        v<span class=\"purple\">[</span>j<span class=\"purple\">]</span> = aux<span class=\"light-blue\">;</span>\n      <span class=\"yelow\">}</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"blue\">void</span> afisDupaInterschimbare<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 1<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span>= n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">cout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> <span class=\"orange\">&quot;</span><span class=\"light-green\"> </span><span class=\"orange\">&quot;</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  sortareaCuDouaForuri<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  afisDupaInterschimbare<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>\n"
  },
  {
    "id": 1001,
    "text": ""
  },
  {
    "id": 1001,
    "text": ""
  },
  {
    "id": 1002,
    "text": ""
  },
  {
    "id": 1003,
    "text": ""
  },
  {
    "id": 1004,
    "text": ""
  },
  {
    "id": 1005,
    "text": ""
  },
  {
    "id": 1005,
    "text": ""
  },
  {
    "id": 1005,
    "text": ""
  },
  {
    "id": 1005,
    "text": ""
  },
  {
    "id": 1005,
    "text": ""
  },
  {
    "id": 3000,
    "text": "<pre class=\"codeAreaTxt\"><span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">iostream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"light-blue\">#include</span> <span class=\"light-blue\">&lt;</span><span class=\"light-green\">fstream</span><span class=\"light-blue\">&gt;</span>\n<span class=\"purple\">using</span> <span class=\"purple\">namespace</span> <span class=\"orange\">std</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ifstream</span> <span class=\"red\">fin</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">f.in</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"orange\">ofstream</span> <span class=\"red\">fout</span><span class=\"yelow\">(</span><span class=\"orange\">&quot;</span><span class=\"light-green\">f.out</span><span class=\"orange\">&quot;</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n<span class=\"purple\">int</span> n<span class=\"light-blue\">,</span> x<span class=\"light-blue\">;</span>\n<span class=\"purple\">double</span> v<span class=\"purple\">[</span>101<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n\n<span class=\"blue\">void</span> citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> n<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"red\">fin</span> <span class=\"light-blue\">&gt;</span><span class=\"light-blue\">&gt;</span> v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> cntInterval<span class=\"yelow\">(</span><span class=\"purple\">double</span> a<span class=\"light-blue\">,</span> <span class=\"purple\">double</span> b<span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> nr = 0<span class=\"light-blue\">;</span> <span class=\"gray\">// nr intregi dintre interval;</span>\n  nr = <span class=\"yelow\">(</span><span class=\"purple\">int</span><span class=\"yelow\">)</span>b <span class=\"light-blue\">-</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span><span class=\"yelow\">)</span>a<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span><span class=\"yelow\">(</span><span class=\"purple\">int</span><span class=\"yelow\">)</span>a == a<span class=\"yelow\">)</span>\n    nr<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span><span class=\"yelow\">(</span><span class=\"purple\">int</span><span class=\"yelow\">)</span>b == b<span class=\"yelow\">)</span>\n    nr<span class=\"light-blue\">-</span><span class=\"light-blue\">-</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> nr<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n\n<span class=\"purple\">int</span> rezolvare<span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  <span class=\"purple\">int</span> mini = 100<span class=\"light-blue\">;</span>\n  <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> i = 0<span class=\"light-blue\">;</span> i <span class=\"light-blue\">&lt;</span> n <span class=\"light-blue\">-</span> 1<span class=\"light-blue\">;</span> i<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n  <span class=\"yelow\">{</span>\n    <span class=\"light-blue\">for</span> <span class=\"yelow\">(</span><span class=\"purple\">int</span> j = i <span class=\"light-blue\">+</span> 1<span class=\"light-blue\">;</span> j <span class=\"light-blue\">&lt;</span> n<span class=\"light-blue\">;</span> j<span class=\"light-blue\">+</span><span class=\"light-blue\">+</span><span class=\"yelow\">)</span>\n    <span class=\"yelow\">{</span>\n      <span class=\"light-blue\">if</span> <span class=\"yelow\">(</span>cntInterval<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span> <span class=\"light-blue\">&lt;</span> mini<span class=\"yelow\">)</span>\n        mini = cntInterval<span class=\"yelow\">(</span>v<span class=\"purple\">[</span>i<span class=\"purple\">]</span><span class=\"light-blue\">,</span> v<span class=\"purple\">[</span>j<span class=\"purple\">]</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n    <span class=\"yelow\">}</span>\n  <span class=\"yelow\">}</span>\n  <span class=\"purple\">return</span> mini<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n<span class=\"purple\">int</span> <span class=\"blue\">main</span><span class=\"yelow\">(</span><span class=\"yelow\">)</span>\n<span class=\"yelow\">{</span>\n  citire<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"red\">fout</span> <span class=\"light-blue\">&lt;</span><span class=\"light-blue\">&lt;</span> rezolvare<span class=\"yelow\">(</span><span class=\"yelow\">)</span><span class=\"light-blue\">;</span>\n  <span class=\"purple\">return</span> 0<span class=\"light-blue\">;</span>\n<span class=\"yelow\">}</span>\n</pre>"
  },

  {
    "id": 100000,
    "text": "<pre class=\"codeAreaTxt\">\nlet a = [\"Hello\", \"how\", \"is\"];\nlet b = [\"your\", \"day\"];\nlet c = a.concat(b);\nconsole.log(c); </pre>\n"
  }
]