[
  {
    "id": 0,
    "text": "#include <iostream>\nusing namespace std;\nint main ()\n{\n  cout << \"Hello, World!\";\n  return 0;\n}      "
  },
  {
    "id": 1,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"numere.in\");\nofstream fout(\"numere.out\");\nint pare(int x)\n{\n  while (x != 0)\n  {\n    if (x % 10 % 2 != 0)\n      return 0;\n    x = x / 10;\n  }\n  return 1;\n}\nint main()\n{\n  int n, x, i, maxim = -1;\n  fin >> n;\n  for (i = 1; i <= n; i++)\n  {\n    fin >> x;\n    if (pare(x) == 1)\n      fout << x << ' ';\n    if (x > maxim)\n      maxim = x;\n  }\n\n  fout << endl;\n\n  if (maxim != -1)\n    fout << maxim;\n  fin.close();\n  fout.close();\n  return 0;\n}"
  },
  {
    "id": 2,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nvoid afis(int n)\n{\n  int r = 0;\n  while (n != 0)\n  {\n    int cif = n % 10;\n    r++;\n    if (r % 2 == 0)\n      fout << cif << ' ';\n    n /= 10;\n  }\n}\nint cerintab(int n)\n{\n  int y = 0, p = 1;\n  while (n > 9)\n  {\n    y = y + (n % 10) * p;\n    p *= 10;\n    n /= 10;\n  }\n  y = y * 10 + n;\n  return y;\n}\nint main()\n{\n  int n;\n  fin >> n;\n  afis(n);\n  fout << endl;\n  fout << cerintab(n);\n  fin.close();\n  fout.close();\n  return 0;\n}"
  },
  {
    "id": 3,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"date.in\");\nofstream fout(\"date.out\");\nint n, v[101];\n\nvoid citire()\n{\n  fin >> n;\n  for (int i = 1; i <= n; i++)\n    fin >> v[i];\n}\n\nint cmmdc(int a, int b)\n{\n  while (b)\n  {\n    int r = a % b;\n    a = b;\n    b = r;\n  }\n  return a;\n}\nvoid rezolare()\n{\n  struct // memorizez valoarea nr impar minimi si pozitia sa intr-un struct \n  {\n    int nr = 999999999, poz;\n  } imp;\n  for (int i = 1; i <= n; i++)\n  {\n    if (v[i] % 2 == 1)\n    {\n      if (v[i] < imp.nr) // calculez nr impar si stochez in struct valoarea si pozitia unde se afla in vector \n      {\n        imp.nr = v[i];\n        imp.poz = i;\n      }\n    }\n  }\n\n  fout << imp.nr << \" \" << imp.poz << endl; // cerinta a\n  fout << cmmdc(v[1], v[2]); // cerinta b\n}\n\nint main()\n{\n  citire();\n  rezolare();\n  fin.close();\n  fout.close();\n  return 0;\n}"
  },
  {
    "id": 4,
    "text": "#include <iostream>\n#include <fstream>\n#include <vector>\nusing namespace std;\nifstream fin(\"date.in\");\nofstream fout(\"date.out\");\n\nstruct\n{\n    int nr_divizori, valoarea;\n} maxi_divizori;\n\nvector<int> divizorii_proprii(int x) // returneaza un vector ce contine divizorii proprii variabilei primite ca parametru in cazul nostru x\n{\n    vector<int> vec_divizori;\n    for (int d = 2; d <= x / 2; d++)\n    {\n        if (x % d == 0)\n            vec_divizori.push_back(d);\n    }\n    return vec_divizori;\n}\nvoid cerinta_a(int nr, vector<int> vec_divizori)\n{\n    // afiseaza numarul citit din fisier si dupa divizorii sai\n    fout << nr << \" \";\n    for (int i = 0; i < vec_divizori.size(); i++)\n        fout << vec_divizori[i] << \" \";\n    fout << endl;\n\n    // cerinta b: de la fiecare numar citit din fisier se verifica lungimea vectorului ce contine divizorii numarului curent si se compara cu maxi. In caz ca gaseste astfel de numar ce are mai multi divizori decat maxi, in maxi se va stoca nr de divizori si valoarea numarul ce avea acei divizori.\n    if (vec_divizori.size() > maxi_divizori.nr_divizori)\n    {\n        maxi_divizori.valoarea = nr;\n        maxi_divizori.nr_divizori = vec_divizori.size();\n    }\n    // In caz ca am doua valori cu nr de divizori maxim se va stoca in maxi valorea mai mica\n    else if (vec_divizori.size() == maxi_divizori.nr_divizori)\n    {\n        if (nr < maxi_divizori.valoarea)\n        {\n            maxi_divizori.valoarea = nr;\n            maxi_divizori.nr_divizori = vec_divizori.size();\n        }\n    }\n}\n\nvoid input()\n{\n    int n;\n    while (fin >> n)\n    {\n        cerinta_a(n, divizorii_proprii(n));\n    }\n    fout << maxi_divizori.valoarea; // cerinta b\n}\nint main()\n{\n    input();\n    fin.close();\n    fout.close();\n    return 0;\n}"
  },
  {
    "id": 5,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"Numere.in\");\nofstream fout(\"Rezultat.out\");\nint x, a, y;\nint prim(int x)\n{\n  if (x < 2)\n    return 0;\n  if (x == 2)\n    return 1;\n  if (x % 2 == 0)\n    return 0;\n  for (int d = 3; d * d <= x; d = d + 2)\n    if (x % d == 0)\n      return 0;\n  return 1;\n}\nvoid afis(int a)\n{\n  int d = 2, p = 0;\n  while (a != 1)\n  {\n    while (a % d == 0)\n    {\n      a /= d;\n      p++;\n    }\n    if (p != 0)\n      fout << d << ' ' << p << endl;\n    d++;\n    p = 0;\n  }\n}\nint main()\n{\n  fin >> x;\n  afis(x);\n  if (prim(x))\n    y = x;\n  while (fin >> x)\n  {\n    if (prim(x) && y == 0)\n      y = x;\n  }\n  fout << y;\n  fin.close();\n  fout.close();\n  return 0;\n}\n"
  },
  {
    "id": 6,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"numere.in\");\nofstream fout(\"numere.out\");\nint x, p = -1, u = -1, maxi = -1;\nint palindrom(int x)\n{\n  int aux = x, ogl = 0;\n  while (aux)\n  {\n    ogl = ogl * 10 + aux % 10;\n    aux /= 10;\n  }\n  if (x == ogl)\n    return 1;\n  else\n    return 0;\n}\nint main()\n{\n  while (fin >> x)\n  {\n    if (palindrom(x) == 1)\n    {\n      if (p == -1)\n        p = x;\n      u = x;\n      if (x > maxi)\n        maxi = x;\n    }\n  }\n  fout << maxi << endl;\n  fout << p << \" \" << u;\n  fin.close();\n  fout.close();\n  return 0;\n}\n"
  },
  {
    "id": 7,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nint x, p = -1, u = -1, maxi = -1;\nint nr_cif(int x)\n{\n  int nr = 0;\n  while (x)\n  {\n    x = x / 10;\n    nr++;\n  }\n  return nr;\n}\nint cmmdc(int a, int b)\n{\n  while (a != b)\n  {\n    if (a > b)\n      a = a - b;\n    else\n      b = b - a;\n  }\n  return a;\n}\nint main()\n{\n  int n, x, mini = 99999, maxi = -1;\n  fin >> n;\n  for (int i = 1; i <= n; i++)\n  {\n    fin >> x;\n    if (x % 2 == 1)\n    {\n      fout << nr_cif(x) << \" \";\n      if (mini > x) // mini maxi din cele impare sau din toate?\n        mini = x;\n      if (maxi < x)\n        maxi = x;\n    }\n  }\n  fout << endl;\n  fout << cmmdc(mini, maxi);\n  fin.close();\n  fout.close();\n  return 0;\n}\n"
  },
  {
    "id": 8,
    "text":"#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"cmmdc3.in\");\nofstream fout(\"cmmdc3.out\");\nint x, a, b, c;\nint cmmdc(int a, int b)\n{\n  while (a != b)\n  {\n    if (a > b)\n      a = a - b;\n    else\n      b = b - a;\n  }\n  return a;\n}\nint main()\n{\n  fin >> x;\n  a = x / 1000000;\n  b = (x % 1000000) / 1000;\n  c = x % 1000;\n  fout << a << ' ' << b << ' ' << c << endl;\n  fout << cmmdc(a, cmmdc(b, c));\n  fin.close();\n  fout.close();\n  return 0;\n}\n"
  },
  {
    "id": 9,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"tip1.in\");\nofstream fout(\"tip1.out\");\nint n, k;\nint main()\n{\n  fin >> n >> k;\n  long long p = 1;\n  int nr = 0, aux = n;\n  while (n)\n  {\n    if ((n % 10) != k)\n    {\n      nr = nr + n % 10 * p;\n      p *= 10;\n    }\n    n /= 10;\n  }\n  int putere = 1;\n  while (putere <= aux)\n    putere *= k;\n  if (putere > aux)\n    putere /= k;\n  /*\n  putere=1;\n  while(putere*k<=aux)\n      putere=putere*k;\n  */\n  fout << nr << ' ' << endl;\n  fout << putere;\n    fin.close();\n    fout.close();\n  return 0;\n}\n"
  },
  {
    "id": 10,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"numere.in\");\nofstream fout(\"numere.out\");\nint n, k;\nvoid ordonare(int v[], int n)\n{\n  int i, j;\n  for (i = 1; i < n; i++)\n    for (j = i + 1; j <= n; j++)\n      if (v[i] > v[j])\n      {\n        int aux = v[i];\n        v[i] = v[j];\n        v[j] = aux;\n      }\n}\nint palindrom(int x)\n{\n  int x2 = x, ogl = 0;\n\n  while (x)\n  {\n    int c = x % 10;\n    ogl = ogl * 10 + c;\n    x = x / 10;\n  }\n\n  if (x2 == ogl)\n    return 1;\n  else\n    return 0;\n}\n\nint nrcif(int x)\n{\n  int nr = 0;\n\n  while (x)\n  {\n    int c = x % 10;\n    nr = nr + 1;\n    x = x / 10;\n  }\n\n  return nr;\n}\nint main()\n{\n  int n, v[1001], i;\n  fin >> n;\n  for (i = 1; i <= n; i++)\n    fin >> v[i];\n  for (i = 1; i <= n; i++)\n    if (palindrom(v[i]) == 1)\n      fout << v[i] << ' ';\n  fout << endl;\n  ordonare(v, n);\n  for (i = 1; i <= n; i++)\n    if (palindrom(v[i]) == 1 && nrcif(v[i]) % 2 == 1)\n      fout << v[i] << ' ';\n  fin.close();\n  fout.close();\n  return 0;\n}\n"
  },
  {
    "id": 11,
    "text": "#include <iostream>\n#include <fstream>\n#include <cmath>\nusing namespace std;\nifstream fin(\"puncte.txt\");\nofstream fout(\"puncte.txt\");\nstruct punct\n{\n  int x, y;\n} v[1000];\nint n;\ndouble dist(punct a, punct b)\n{\n  return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\n}\nint main()\n{\n  n = 0;\n  while (fin >> v[n].x >> v[n].y)\n  {\n    n++;\n  }\n  int nr = 0;\n  for (int i = 0; i < n; i++)\n    if (v[i].x > 0 && v[i].y > 0)\n      nr++;\n  fout << nr << \" \";\n  double maxi = 0;\n  for (int i = 0; i < n - 1; i++)\n    for (int j = i + 1; j < n; j++)\n    {\n      double d = dist(v[i], v[j]);\n      if (d > maxi)\n        maxi = d;\n    }\n  fout << maxi;\n  fin.close();\n  fout.close();\n  return 0;\n}\n"
  },
  {
    "id": 12,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"fractii.in\");\nofstream fout(\"fractii.out\");\nstruct fractie{\n    int numarator, numitor;\n}v[101];\nint n;\nint cmmdc(int a, int b)\n{\n    while(b)\n    {\n        int r=a%b;\n        a=b;\n        b=r;\n    }\n    return a;\n}\nint cmmmc(int a, int b)\n{\n    return (a*b)/cmmdc(a,b);\n}\n\nvoid citire(int &n, fractie v[])\n{\n    fin >> n;\n    for(int i=1; i<=n; i++)\n        fin >> v[i].numarator >> v[i].numitor;\n}\nint cerinta1(int n, fractie v[])\n{\n    int cnt = 0;\n    for(int i = 1;i <= n; i++)\n    {\n\n        if(cmmdc(v[i].numarator, v[i].numitor) == 1)\n            cnt++;\n    }\n    return cnt;\n\n}\nint cerinta2(int n, fractie v[])\n{\n    int multiplu = v[1].numitor;\n    for(int i=2; i<=n; i++)\n    {\n        multiplu = cmmmc(multiplu,v[i].numitor);\n    }\n    return multiplu;\n}\n\nint main()\n{\n    citire(n, v);\n    fout << cerinta1(n, v) <<\" \" << cerinta2(n, v);\n    return 0;\n}\n"
  },
  {
    "id": 13,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nstruct cerc\n{\n    double x, y, r;\n} v[101];\nint n;\n\nvoid citire(int &n, cerc v[])\n{\n    fin >> n;\n    for (int i = 1; i <= n; i++)\n        fin >> v[i].x >> v[i].y >> v[i].r;\n}\n\nvoid ordonare(int n, cerc v[])\n{\n    for (int i = 1; i < n; i++)\n        for (int j = i + 1; j <= n; j++)\n            if (v[i].r > v[j].r)\n            {\n                cerc aux = v[i];\n                v[i] = v[j];\n                v[j] = aux;\n            }\n}\nvoid afis(int n, cerc v[])\n{\n    for (int i = 1; i <= n; i++)\n        fout << '(' << v[i].x << ',' << v[i].y << ',' << v[i].r << ')' << endl;\n}\n\nint numarare(int n, cerc v[])\n{\n    int k = 0;\n    for (int i = 1; i <= n; i++)\n        if (v[i].x == v[i].y)\n            k++;\n    return k;\n}\n\nint main()\n{\n    citire(n, v);\n    ordonare(n, v);\n    afis(n, v);\n    fout << numarare(n, v);\n    return 0;\n}\n"
  },
  {
    "id": 14,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"tip5.in\");\nofstream fout(\"tip5.out\");\nstruct produs\n{\n    int cod, pret, cantitate;\n    char denumire[21];\n} v[101];\nint n;\n\nvoid citire(int &n, produs v[])\n{\n    fin >> n;\n    fin.get();\n    for (int i = 1; i <= n; i++)\n    {\n        fin >> v[i].cod >> v[i].pret >> v[i].cantitate;\n        fin >> v[i].denumire;\n        fin.get();\n    }\n}\nvoid cerinta1(int n, produs v[])\n{\n    bool ok = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        if (v[i].cantitate > 10)\n            if (ok == 0)\n            {\n                fout << v[i].denumire;\n                ok = 1;\n            }\n            else\n                fout << \", \" << v[i].denumire;\n    }\n    if (ok == 0)\n        fout << \"NU EXISTA!\";\n}\nvoid ordonare(int n, produs v[])\n{\n    for (int i = 1; i < n; i++)\n        for (int j = i + 1; j <= n; j++)\n            if (v[i].pret < v[j].pret)\n            {\n                produs aux = v[i];\n                v[i] = v[j];\n                v[j] = aux;\n            }\n}\nvoid afis(int n, produs v[])\n{\n    for (int i = 1; i <= n; i++)\n        fout << v[i].cod << ' ' << v[i].denumire << ' ' << v[i].pret << ' ' << v[i].cantitate << endl;\n}\n\nint total(int n, produs v[])\n{\n\n    int t = 0;\n    for (int i = 1; i <= n; i++)\n    {\n\n        t = t + v[i].cantitate * v[i].pret;\n    }\n    return t;\n}\n\nint main()\n{\n    citire(n, v);\n    cerinta1(n, v);\n    fout << endl;\n    ordonare(n, v);\n    afis(n, v);\n    fout << total(n, v);\n    return 0;\n}\n"
  },
  {
    "id": 15,
    "text": "#include <iostream>\n#include <fstream>\n#include <iomanip>\n#include <cstring>\nusing namespace std;\nifstream fin(\"elevi.in\");\nofstream fout(\"elevi.out\");\nstruct elev\n{\n    int note[6];\n    char nume[21];\n    double media;\n} v[101];\nint n;\n\nvoid citire(int &n, elev v[])\n{\n    fin >> n;\n    fin.get();\n    for (int i = 1; i <= n; i++)\n    {\n        int nr = 0, s = 0;\n        for (int j = 1; j <= 5; j++)\n        {\n            fin >> v[i].note[j];\n            fin.get();\n            if (v[i].note[j] != 0)\n            {\n                nr++;\n                s = s + v[i].note[j];\n            }\n        }\n        if (nr > 0)\n            v[i].media = 1.0 * s / nr;\n        else\n            v[i].media = 0;\n        fin.get(v[i].nume, 20);\n        fin.get();\n    }\n}\nvoid ordonare(int n, elev v[])\n{\n    for (int i = 1; i < n; i++)\n        for (int j = i + 1; j <= n; j++)\n            if (v[i].media < v[j].media)\n            {\n                elev aux = v[i];\n                v[i] = v[j];\n                v[j] = aux;\n            }\n}\nvoid ordonare2(int n, elev v[])\n{\n    for (int i = 1; i < n; i++)\n        for (int j = i + 1; j <= n; j++)\n            if (strcmp(v[i].nume, v[j].nume) > 0)\n            {\n                elev aux = v[i];\n                v[i] = v[j];\n                v[j] = aux;\n            }\n}\nvoid afis(int n, elev v[])\n{\n    for (int i = 1; i <= n; i++)\n        fout << fixed << setprecision(2) << v[i].media << ' ' << v[i].nume << endl;\n}\nint main()\n{\n    citire(n, v);\n    ordonare(n, v);\n    afis(n, v);\n    ordonare2(n, v);\n    afis(n, v);\n    return 0;\n}\n"
  },
  {
    "id": 16,
    "text": "#include <fstream>\n\nusing namespace std;\nifstream fin(\"numere.in\");\nofstream fout(\"numere.out\");\nint v[1001], s[1001],n ,x, maxi;\n\nint sumacif(int x)\n{int c, sum=0;\n    while(x)\n    {c=x%10;\n     sum=sum+c;\n       x=x/10;\n    }\n    return sum;\n}\n\nint main()\n{\n    fin>>n;\n    for(int i=1;i<=n;i++)\n    {\n      fin>>v[i];\n        s[i]=sumacif(v[i]);\n        fout<<s[i]<<' ';\n        if(s[i]>maxi) maxi=s[i];\n    }\n    fout<<endl;\n    for(int i=1;i<=n;i++)\n        if(s[i]==maxi) fout<<v[i]<<' ';\n\nfin.close();\nfout.close(); return 0;\n}\n"
  },
  {
    "id": 17,
    "text": "#include <fstream>\n\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nint v[1001], n ,x,sum=0,nr=0 ;\nvoid ordonare (int v[1001],int n)\n{\n    for(int i=1;i<=n-1;i++)\n        for(int j=i+1;j<=n;j++)\n    if(v[i]>v[j]){\n        int aux=v[i];\n        v[i]=v[j];\n        v[j]=aux;\n    }\n}\n\n\nint main()\n{\n    fin>>n;\n    for(int i=1;i<=n;i++)\n    {\n      fin>>v[i];\n        if(i%2!=0){\n        sum=sum+v[i];\n        nr++;}\n\n    }\n    fout<<1.0*sum/nr;\n    fout<<endl;\nordonare(v,n);\nfout<<v[1]<<\" \";\nx=v[1];\nfor(int i=2;i<=n;i++)\nif(v[i]!=x){\n    fout<<v[i]<<\" \";\n    x=v[i];\n}\n\nfin.close();\nfout.close(); return 0;\n}\n"
  },
  {
    "id": 18,
    "text": "#include <fstream>\n\nusing namespace std;\nifstream fin(\"numere.in\");\nofstream fout(\"numere.out\");\nint v[1001], n , ok=1 ;\nint cmmdc(int x,int y)\n{\n    while(x!=y)\n        if(x>y) x=x-y;\n    else y=y-x;\n    return x;\n}\nint main()\n{   fin>>n;\n    for(int i=1;i<=n;i++)\n       {fin>>v[i];}\n   for(int i=1;i<=n-1;i++)\n        for(int j=i+1;j<=n;j++)\n            if(cmmdc(v[i],v[j])!=1) ok=0;\n\nif(ok==1) fout<<\"DA\";\nelse fout<<\"NU\";\nfout<<endl;\nfor(int i=1;i<=n-1;i++)\n    if(cmmdc(v[i],v[i+1])!=1)\n      {\n         for(int j=i+2;j<=n;j++)\n              v[j-1]=v[j];\n         n--;i--;\n      }\nfor(int i=1;i<=n;i++)\n       {fout<<v[i]<<' ';}\nfin.close();\nfout.close(); return 0;\n}\n"
  },
  {
    "id": 19,
    "text": "#include <fstream>\n#include <iostream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nint v[1001], n , ok=1 ;\nint nrcif(int x)\n{int c, nr=0;\nif(x==0) nr=1;\n    while(x)\n    {c=x%10;\n     nr++;\n       x=x/10;\n    }\n    return nr;\n}\n\nint main()\n{  fin>>n;\n   for(int i=1;i<=n;i++)\n       {fin>>v[i];}\n   for(int i=n;i>=1;i--)\n        {cout<<v[i]<<' ';}\ncout<<endl;\n   for(int i=1;i<=n;i++)\n       {cout<<nrcif(v[i])<<' ';}\nfin.close();\nreturn 0;\n}\n"
  },
  {
    "id": 20,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"numere.in\");\nofstream fout(\"numere.out\");\nint x,y,nr=0,a,b,ok=0;\nint p10(int n)\n{ if(n==0) return 1;\n    while(n)\n {if(n%10==0)\n return 1;\n else n/=10;\n }\n    return 0;\n}\nint verif(int a, int b)\n{if(a==0 && b==0) return 1;\n    while(a)\n{if(a==b)return 1;\nelse a/=10;\n}\nreturn 0;\n}\n\nint main()\n{fin>>x;\nif(p10(x)==1)nr++;\n\nwhile(fin>>y)\n{ if(p10(y)==1) nr++;\n    if(verif(x,y)==1)\n        if(ok==0)\n    {ok=1; a=x; b=y;}\n    x=y;\n}\n    fout<<nr<<endl;\n    if(ok==1)\n        fout<<a<<\" \"<<b;\n    else fout<<\"NU EXISTA\";\n    return 0;\n}\n"
  },
  {
    "id": 21,
    "text": "#include <iostream>\n#include <fstream>\n\nusing namespace std;\nifstream fin(\"date.in\");\nofstream fout(\"date.out\");\nint n,fr[10],x;\nint elim(int n)\n{int aux=0,p=1;\n    while(n>=10)\n    {\n        aux=aux+n%10*p;\n        n/=10;\n        p=p*10;\n    }\n    fr[n]++;\n    return aux;\n}\nint main()\n{\n    fin>>n;\n    for(int i=1;i<=n;i++)\n        {\n            fin>>x;\n            fout<<elim(x)<<\" \";\n        }\n        fout<<endl;\n    for(int i=9;i>=0;i--)\n        if(fr[i]>0)\n        fout<<i;\n\n\n\n    return 0;\n}\n"
  },
  {
    "id": 22,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"numere.txt\");\nofstream fout(\"numere.out\");\nint n,k,v[101];\nvoid ordonare (int v[],int n)\n{ for(int i=1;i<=n-1;i++)\n        for(int j=i+1;j<=n;j++)\n           if(v[i]>v[j]){\n              int aux=v[i];\n              v[i]=v[j];\n              v[j]=aux;\n             }\n}\nint paritate(int n)\n{if(n<10) return 1;\n while(n>=10)\n {if(n%2!=n/10%2)\n       return 0;\n else n/=10;\n }\n return 1;\n}\nint nrdiv(int x)\n{int nr=0;\n for(int d=2;d<=x/2;d++)\n    if(x%d==0)\n       nr++;\n if(nr>=k) return 1;\n else return 0;\n}\nint main()\n{fin>>k>>n;\nfor(int i=1;i<=n;i++)\n    {fin>>v[i];}\nif(paritate(v[1])==1) cout<<\"DA\";\nelse cout<<\"NU\";\nordonare(v,n);\nint x=-1;\nfor(int i=1;i<=n;i++)\n    if(nrdiv(v[i])==1 &&x!=v[i]) {fout<<v[i]<<' ';x=v[i];}\n    return 0;\n}\n"
  },
  {
    "id": 23,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nint par[31], spf[31], n1, n2;\nbool supraperfect(int x){\n    int s=1;\n    int d;\n\n    for(d=2; d*d < x; d++){\n\n        if(x % d == 0)\n            {s+= x/d;\n            s+= d;\n            }\n    }\n    if(d*d == x)\n        s+=d;\n    if(s > x) return true;\n    return false;\n}\n\nvoid ordonare(int par[],int lenght){\n\n    bool ok;\n\n    do{\n\n        ok = true;\n        for(int i = 0; i < lenght - 1; i++)\n            if(par[i] < par[i+1]){\n\n                swap(par[i] , par[i+1]);\n                ok = false;\n\n            }\n\n    }while(!ok);\n\n}\n\nint main()\n{\n    int n;\n    fin >> n;\n    for(int i = 0; i < n; i++){\n        int x;\n        fin >> x;\n        if(x % 2 == 0)\n            par[n1++] = x;\n        if(supraperfect(x))\n            spf[n2++] = x;\n    }\n\n    ordonare(par,n1);\n    for(int i = 0; i < n1; i++)\n        fout << par[i] << ' ';\n    fout << '\\n';\n\n    for(int i = 0; i < n2; i++)\n        fout << spf[i] << ' ';\n    fout << '\\n';\n\n    fin.close();\n    fout.close();\n\n    return 0;\n}\n"
  },
  {
    "id": 24,
    "text": ""
  },
  {
    "id": 25,
    "text": "#include <fstream>\n\nusing namespace std;\nifstream fin(\"cifre.in\");\nofstream fout(\"cifre.out\");\nint fr[10];\nint main()\n{ \n    long long x;\n    int s=0,cif=-1;\n    fin>>x;\n    if(x==0)\n    {\n        cif=0;\n        fr[0]++;\n    }\n    else\n    {\n        while(x)\n        { \n            s=s+x%10;\n            fr[x%10]++;\n            if(x%10>cif)\n                cif=x%10;\n            x=x/10;\n        }\n    }\n    fout<<s<<' '<<cif<<endl;\n    for(int i=0;i<=9;i++)\n        fout<<fr[i]<<' ';\n    return 0;\n}\n"
  },
  {
    "id": 26,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"numere.in\");\nofstream fout(\"numere.out\");\nint v[1000001], n, x, i, j, aux;\nint fibo(int x)\n{\n    if (x == 1)\n        return 1;\n    int a = 1, b = 1, c;\n    c = a + b;\n    while (c < x)\n    {\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    if (c == x)\n        return 1;\n    else\n        return 0;\n}\nint main()\n{\n    while (fin >> x)\n    {\n        if (fibo(x) == 1)\n        {\n            n++;\n            v[n] = x;\n        }\n    }\n    for (i = 1; i < n; i++)\n        for (j = i + 1; j <= n; j++)\n            if (v[i] > v[j])\n            {\n                aux = v[i];\n                v[i] = v[j];\n                v[j] = aux;\n            }\n    if (n == 0)\n        fout << \"Nu exista\" << endl;\n    else\n    {\n        fout << v[n] << endl;\n        for (i = 1; i <= n; i++)\n            fout << v[i] << ' ';\n    }\n    fin.close();\n    fout.close();\n    return 0;\n}\n"
  },
  {
    "id": 27,
    "text": "#include <fstream>\nusing namespace std;\nifstream fout(\"atestat.in\");\nofstream fin(\"atestat.out\");\nint v[1000001],n,x,i,j,aux,k;\nint main()\n{ fin>>n;\n  for(i=1;i<=n;i++)\n        f>>v[i];\n  fin>>k;\n  for(i=1;i<=n;i++)\n     if(v[i]/10%10%2==1)\n           fout<<v[i]<<' ';\n  fout<<endl;\n  aux=v[k];v[k]=v[k+1];v[k+1]=aux;\n  for(i=1;i<=n;i++)\n       fout<<v[i]<<' ';\nfin.close();\nfout.close();\n    return 0;\n}\n  "
  },
  {
    "id": 28,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"tip2.in\");\nofstream fout(\"tip2.out\");\nint v[1001],n,nr=0;\nint suma (int x)\n{int s=0;\nwhile(x)\n  { s=s+x%10;\n    x=x/10;\n  }\n  return s;\n}\nvoid ordonare(int v[],int n)\n{ bool ok;\n  do{   ok = true;\n        for(int i = 1; i < n; i++)\n            if(v[i] > v[i+1]){\n                swap(v[i] , v[i+1]);\n                ok = false;\n            }\n    }while(!ok);\n}\nint prim(int x)\n{\n    if(x<2)\n        return 0;\n    if(x==2)\n        return 1;\n    if(x%2==0)\n        return 0;\n    for(int d=3; d*d<=x;d=d+2)\n        if(x%d==0)\n        return 0;\n    return 1;\n\n}\nint main()\n{\n    fin>>n;\n    for(int i = 1; i <= n; i++)\n        fin>>v[i];\n    ordonare(v,n);\n    for(int i = n; i >=1; i--)\n        if(suma(v[i])%2==0)\n           fout<<v[i]<<' ';\n    fout<<endl;\n    for(int i = 1; i <= n; i++)\n        if(prim(v[i])==1)\n           {fout<<v[i]<<' ';\n            nr++;}\n    if(nr==0) fout<<\"Nu exista\";\n    return 0;\n}\n "
  },
  {
    "id": 29,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"vector.in\");\nofstream fout(\"vector.out\");\nint v[1001], n, nr = 0;\nint nr_cifra(int x)\n{\n    int nr = 0;\n    while (x > 0)\n    {\n        int cif = x % 2;\n        if (cif == 1)\n            nr++;\n        x = x / 2;\n    }\n    return nr;\n}\nint prima_cifra(int x)\n{\n    while (x >= 10)\n    {\n        x = x / 10;\n    }\n    return x;\n}\nvoid ordonare1(int v[], int n)\n{\n    bool ok;\n    do\n    {\n        ok = true;\n        for (int i = 1; i < n; i++)\n            if (prima_cifra(v[i]) < prima_cifra(v[i + 1]))\n            {\n                swap(v[i], v[i + 1]);\n                ok = false;\n            }\n    } while (!ok);\n}\nvoid ordonare2(int v[], int n)\n{\n    bool ok;\n    do\n    {\n        ok = true;\n        for (int i = 1; i < n; i++)\n        {\n            if (nr_cifra(v[i]) > nr_cifra(v[i + 1]))\n            {\n                swap(v[i], v[i + 1]);\n                ok = false;\n            }\n            else if (nr_cifra(v[i]) == nr_cifra(v[i + 1]))\n                if (v[i] < v[i + 1])\n                {\n                    swap(v[i], v[i + 1]);\n                    ok = false;\n                }\n        }\n    } while (!ok);\n}\n\nint main()\n{\n    fin >> n;\n    for (int i = 1; i <= n; i++)\n        fin >> v[i];\n    ordonare1(v, n);\n    for (int i = 1; i <= n; i++)\n        fout << v[i] << ' ';\n    fout << endl;\n    ordonare2(v, n);\n    for (int i = 1; i <= n; i++)\n        fout << v[i] << ' ';\n    return 0;\n}\n"
  },
  {
    "id": 30,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"tablou.in\");\nofstream fout(\"tablou.out\");\nint v[1001],n,a=-1,b=-1;\n\nvoid ordonare(int v[],int n)\n{ bool ok;\n  do{   ok = true;\n        for(int i = 1; i < n; i++)\n            if(v[i]>v[i+1]){\n                swap(v[i] , v[i+1]);\n                ok = false;\n            }\n    }while(!ok);\n}\n\nint main()\n{\n    fin>>n;\n    for(int i = 1; i <= n; i++)\n        fin>>v[i];\n    ordonare(v,n);\n    for(int i = 1; i <=n; i++)\n           fout<<v[i]<<' ';\n    fout<<endl;\n    for(int i = 1; i <= n; i++)\n        if(v[i]%2==0)\n           if(a==-1){a=v[i];b=v[i];}\n           else b=v[i];\n    if(a!=-1)\n        fout<<b<<' '<<a;\n        return 0;\n}\n"
  },
  {
    "id": 31,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nint n, a[101][101], fr[101], cntElementePrime;\n\nvoid citire()\n{\n  fin >> n;\n  for (int i = 1; i <= n; i++)\n  {\n    for (int j = 1; j <= n; j++)\n    {\n      fin >> a[i][j];\n      fr[a[i][j]]++;\n    }\n  }\n}\n\nbool isPrim(int x)\n{\n  if (x == 1)\n    return false; // nu e prim\n  if (x % 2 == 0 && x != 2)\n    return false;\n  for (int d = 2; d <= x / 2; d++)\n    if (x % d == 0)\n      return false;\n\n  return true; // nu are divizori inafara de 1 si el insasi deci e nr prim\n}\n\nint cerinta_a()\n{\n  for (int i = 2; i <= n; i++)\n  {\n    for (int j = n + 2 - i; j <= n; j++)\n      if (isPrim(a[i][j]))\n        cntElementePrime++;\n  }\n  return cntElementePrime;\n}\n\nvoid cerinta_b()\n{\n  for (int i = -99; i <= 99; i++)\n    if (fr[i])\n      fout << i << \" \";\n  fout << endl;\n}\n\nint main()\n{\n  citire();\n  fout << cerinta_a() << endl;\n  cerinta_b();\n  return 0;\n}"
  },
  {
    "id": 32,
    "text": "#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"Matrice.in\");\nofstream fout(\"Matrice.out\");\nint a[101][101], suma, n, p, v, l, c;\n\nbool isPerfect(int x)\n{\n  int s = 0;\n  for (int d = 1; d <= x / 2; d++)\n  {\n    if (x % d == 0)\n      s += d;\n  }\n  return x == s ? true : false;\n}\n\nvoid citire()\n{\n  fin >> n >> p;\n  for (int i = 1; i <= p; i++)\n  {\n    fin >> v >> l >> c;\n    a[l][c] = v;\n    suma += v;\n  }\n}\n\nvoid cerinta_a()\n{\n  for (int i = 1; i <= n; i++)\n  {\n    for (int j = 1; j <= n; j++)\n      fout << a[i][j] << \" \";\n    fout << \"\\n\";\n  }\n}\n\nvoid cerinta_b()\n{\n  isPerfect(suma) == true ? fout << \"DA\" : fout << \"NU\";\n}\n\nint main()\n{\n  citire();\n  cerinta_a();\n  cerinta_b();\n  return 0;\n}"
  },
  {
    "id": 33,
    "text": "#include <fstream>\n#include <iostream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nint a[101][101],n,nr,s;\nvoid citire(int a[][101], int &n)\n{\n    fin>>n;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        {\n            fin>>a[i][j];\n\n        }\n}\nint prim(int x)\n{\n    int nr=0;\n    for(int d=1;d<=x;d++)\n    {\n        if(x%d==0){nr++;}\n    }\n    if(nr==2)return 1;\n    return 0;\n}\nint palindrom(int x)\n{\n    int ogl=0,aux=x;\n    while(x>0)\n        {\n            ogl=ogl*10+x%10;\n            x/=10;\n        }\n        if(ogl==aux) return 1;\n        else return 0;\n}\nint main()\n{ citire(a,n);\nfor(int j=1;j<=n;j++)\n    {    int nr=0;\n         for(int i=1;i<=n;i++)\n               if(prim(a[i][j])==1)\n                  nr++;\n         fout<<nr<<' ';\n    }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if(i<j and i+j>n+1)\n                 s=s+a[i][j];\n   fout<<endl;\n   if(palindrom(s)==1)\n      fout<<\"DA\";\n   else fout<<\"NU\";\n   fin.close();\n   fout.close();\n   return 0;\n\n}\n"
  },
  {
    "id": 34,
    "text": "#include <fstream>\n#include <iostream>\nusing namespace std;\nifstream fin(\"matrice.in\");\nofstream fout(\"matrice.out\");\nint a[101][101],n,maxim,s;\nvoid citire(int a[][101], int &n)\n{\n    fin>>n;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n        {\n            fin>>a[i][j];\n\n        }\n}\nvoid afis(int a[][101], int n)\n{\n\n    for(int i=1;i<=n;i++)\n       {\n           for(int j=1;j<=n;j++)\n             {\n              fout<<a[i][j]<<' ';\n              }\n        fout<<endl;\n       }\n}\nint main()\n{ citire(a,n);\nfor(int i=1;i<=n;i++)\n     if(a[i][n-i+1]>maxim)\n          maxim=a[i][n-i+1];\nfout<<maxim<<endl;\nfor(int i=1;i<=n;i++)\n    for(int j=i+1;j<=n;j++)\n            if(a[i][i]>a[j][j])\n                 {\n                     int aux=a[i][i];\n                     a[i][i]=a[j][j];\n                     a[j][j]=aux;\n                 }\n   afis(a,n);\n   fin.close();\n   fout.close();\n   return 0;\n\n}\n"
  },
  {
    "id": 35,
    "text": "#include <fstream>\n#include <iostream>\nusing namespace std;\nifstream fin(\"matrice.in\");\nofstream fout(\"matrice.out\");\nint a[101][101], n, m, maxim, minim, l1, c1, l2, c2;\nvoid citire(int a[][101], int &n, int &m)\n{\n    fin >> n >> m;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n        {\n            fin >> a[i][j];\n        }\n}\nvoid afis(int a[][101], int n, int m)\n{\n\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            fout << a[i][j] << ' ';\n        }\n        fout << endl;\n    }\n}\nint main()\n{\n    citire(a, n, m);\n    maxim = minim = a[1][1];\n    l1 = l2 = c1 = c2 = 1;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n        {\n            if (a[i][j] > maxim)\n            {\n                maxim = a[i][j];\n                l1 = i;\n                c1 = j;\n            }\n            if (a[i][j] < minim)\n            {\n                minim = a[i][j];\n                l2 = i;\n                c2 = j;\n            }\n        }\n    int aux = a[l1][c1];\n    a[l1][c1] = a[l2][c2];\n    a[l2][c2] = aux;\n    afis(a, n, m);\n    fout << endl;\n    // refacem matricea initiala din care se cere stergerea\n    aux = a[l1][c1];\n    a[l1][c1] = a[l2][c2];\n    a[l2][c2] = aux;\n    fout << endl;\n\n    for (int j = c2 + 1; j <= m; j++)\n        for (int i = 1; i <= n; i++)\n            a[i][j - 1] = a[i][j];\n    m--;\n    for (int i = l2 + 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            a[i - 1][j] = a[i][j];\n    n--;\n    afis(a, n, m);\n    fin.close();\n    fout.close();\n    return 0;\n}\n"
  },
  {
    "id": 36,
    "text": "#include <fstream>\n#include <iostream>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nint a[101][101],n,m,nr,s;\nvoid citire(int a[][101], int &n, int &m)\n{\n    fin>>n>>m;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            fin>>a[i][j];\n\n        }\n}\nint perfect(int x)\n{int s=0;\n    for(int d=1;d<=x/2;d++)\nif(x%d==0)\n    s=s+d;\nif(x==s) return 1;\n    else return 0;\n}\nint main()\n{ citire(a,n,m);\nfor(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n         if(perfect(a[i][j])==1)\n            nr++;\nfout<<nr<<endl;\nfor(int i=1;i<=n;i++)\n    s=s+a[i][1]%10;\nfout<<s;\n   fin.close();\n   fout.close();\n   return 0;\n\n}\n"
  },
  {
    "id": 37,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"tip3.in\");\nofstream fout(\"tip3.out\");\nint a[101][101],n,m,l,nr;\nvoid citire(int a[][101], int &n, int &m)\n{   fin>>n>>m;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            fin>>a[i][j];\n\n        }\n}\nint prim(int x)\n{\n    int nr=0;\n    for(int d=1;d<=x;d++)\n    {\n        if(x%d==0){nr++;}\n    }\n    if(nr==2)return 1;\n    return 0;\n}\nint palindrom(int x)\n{\n    int ogl=0,aux=x;\n    while(x>0)\n        {\n            ogl=ogl*10+x%10;\n            x/=10;\n        }\n        if(ogl==aux) return 1;\n        else return 0;\n}\nint main()\n{ citire(a,n,m);\nfor(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n         if(palindrom(a[i][j])==1)\n            {l=i;j=m+1;i=n+1;}\nif(l!=0) fout<<l<<endl;\nelse fout<<\"NU EXISTA\";\nfor(int j=1;j<=m;j++)\n    if(prim(a[1][j])==1) nr++;\nfor(int i=2;i<=n;i++)\n    if(prim(a[i][m])==1) nr++;\nfor(int j=m-1;j>=1;j--)\n    if(prim(a[n][j])==1) nr++;\nfor(int i=m-1;i>=2;i--)\n    if(prim(a[i][1])==1) nr++;\nfout<<nr;\n   fin.close();\n   fout.close();\n   return 0;\n\n}\n"
  },
  {
    "id": 38,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"matrice.in\");\nofstream fout(\"matrice.out\");\nint a[101][101],n,m,l,nr1,maxim;\nvoid citire(int a[][101], int &n, int &m)\n{   fin>>n>>m;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            fin>>a[i][j];\n\n        }\n}\nint main()\n{ citire(a,n,m);\nfor(int i=1;i<=n;i++)\n    {nr1=0;\n     for(int j=1;j<=m;j++)\n         if(a[i][j]==1)\n            nr1++;\n     if(nr1>maxim){maxim=nr1;l=i;}\n    }\nfout<<l<<endl;\nfor(int i=1;i<=n;i++)\n {int y=0,p=1;\n    for(int j=m;j>=1;j--)\n     {\n         y=y+a[i][j]*p;\n         p=p*2;\n     }\n     fout<<y<<' ';\n    }\n\n   fin.close();\n   fout.close();\n   return 0;\n\n}\n"
  },
  {
    "id": 39,
    "text": "#include <fstream>\nusing namespace std;\nifstream fin(\"linie.in\");\nofstream fout(\"linie.out\");\nint a[101][101], n, nrprime[101], maxim, v[100001], m;\nint prim(int x)\n{\n    int nr = 0;\n    for (int d = 1; d <= x; d++)\n    {\n        if (x % d == 0)\n        {\n            nr++;\n        }\n    }\n    if (nr == 2)\n        return 1;\n    return 0;\n}\nvoid citire(int a[][101], int &n)\n{\n    fin >> n;\n    for (int i = 1; i <= n; i++)\n    {\n        nrprime[i] = 0;\n        for (int j = 1; j <= n; j++)\n        {\n            fin >> a[i][j];\n            if (prim(a[i][j]) == 1)\n                nrprime[i]++;\n        }\n        if (nrprime[i] > maxim)\n            maxim = nrprime[i];\n    }\n}\n\nint main()\n{\n    citire(a, n);\n    if (maxim != 0)\n    {\n        for (int i = 1; i <= n; i++)\n            if (nrprime[i] == maxim)\n                fout << i << ' ';\n    }\n    else\n        fout << \"NU EXISTA\";\n    fout << endl;\n    for (int j = 1; j <= n; j++)\n    {\n        m++;\n        v[m] = a[1][j];\n    }\n    for (int i = 2; i <= n; i++)\n    {\n        m++;\n        v[m] = a[i][n];\n    }\n    for (int j = n - 1; j >= 1; j--)\n    {\n        m++;\n        v[m] = a[n][j];\n    }\n    for (int i = n - 1; i >= 2; i--)\n    {\n        m++;\n        v[m] = a[i][1];\n    }\n    for (int i = 1; i <= m; i++)\n        for (int j = i + 1; j <= m; j++)\n            if (v[i] < v[j])\n            {\n                int aux = v[i];\n                v[i] = v[j];\n                v[j] = aux;\n            }\n    for (int i = 1; i <= m; i++)\n        fout << v[i] << \" \";\n    fin.close();\n    fout.close();\n    return 0;\n}\n"
  },
  {
    "id": 40,
    "text": "#include <fstream>\n#include <cstring>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nchar s[101], *p;\nint nr = 0;\nint main()\n{\n    fin.get(s, 100);\n    for (int i = 0; i <= strlen(s) - 1; i++)\n    {\n        if (strchr(\"0123456789\", s[i]) != NULL)\n        {\n            strcpy(s + i, s + i + 1);\n            i--;\n        }\n    }\n    fout << s << endl;\n    p = strtok(s, \" \");\n    while (p != NULL)\n    {\n        if (strchr(\"aeiouAEIOU\", p[0]) != NULL)\n        {\n            fout << p << ' ';\n            nr++;\n        }\n        p = strtok(NULL, \" \");\n    }\n    if (nr == 0)\n        fout << \"nu sunt\";\n    return 0;\n}\n"
  },
  {
    "id": 41,
    "text": ""
  },
  {
    "id": 42,
    "text": "#include <fstream>\n#include <cstring>\nusing namespace std;\nifstream fin(\"sir.in\");\nofstream fout(\"sir.out\");\nchar s[251];\nint main()\n{\n    fin.get(s, 250);\n    for (int i = 0; i <= strlen(s) - 2; i++)\n    {\n        if (s[i] == s[i + 1])\n        {\n            fout << s[i] << s[i + 1] << endl;\n            strcpy(s + i, s + i + 2);\n            i--;\n        }\n    }\n    fout << s << endl;\n    return 0;\n}\n"
  },
  {
    "id": 43,
    "text": "#include <fstream>\n#include <iostream>\n#include <cstring>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nchar s[71],t[71],*p;\nint nr=0;\nint main()\n{fin.get(s,70);\n strcpy(t,s);\n strlwr(t);\n for(int i=1;i<=strlen(t)-1;i++)\n      {if(t[i]==t[0])\n            nr++;\n      }\n cout<<nr<<\" \";\n strcpy(t,s);\n for(int i=0;i<=strlen(t)-1;i++)\n    if(t[i]>='A' && t[i]<='Z')\n        t[i]=t[i]+32;\n    else\n        if(t[i]>='a' && t[i]<='z')\n            t[i]=t[i]-32;\n  cout<<t;\np=strtok(s,\" \");\nwhile(p!=NULL)\n { if(strchr(\"aeiouAEIOU\",p[0])!=NULL)\n         if(tolower(p[0])==tolower(p[strlen(p)-1]))\n            {strcpy(p,p+1);\n             p[strlen(p)-1]='\\0';\n             nr++;\n             fout<<p<<endl;\n             }\n   p=strtok(NULL,\" \");\n }\n   if(nr==0)\n   fout<<\"NU EXISTA\";\nreturn 0;}\n"
  },
  {
    "id": 44,
    "text": "#include <fstream>\n#include <cstring>\nusing namespace std;\nifstream fin(\"cuvinte.in\");\nofstream fout(\"cuvinte.out\");\nchar v[101][31], cuv[31];\nint n, nrmaxv, nrv, fr[256];\nint main()\n{\n    fin >> n;\n    for (int i = 0; i < n; i++)\n        fin >> v[i];\n    for (int i = 0; i < n; i++)\n    {\n        nrv = 0;\n        for (int j = 0; j < strlen(v[i]); j++)\n            if (strchr(\"aeiou\", v[i][j]) != NULL)\n                nrv++;\n        if (nrv > nrmaxv)\n        {\n            nrmaxv = nrv;\n            strcpy(cuv, v[i]);\n        }\n    }\n    fout << cuv << endl;\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < strlen(v[i]); j++)\n            fr[v[i][j]]++;\n    }\n\n    for (char c = 'a'; c <= 'z'; c++)\n        if (fr[c] != 0)\n            fout << c << ' ';\n\n    fin.close();\n    fout.close();\n    return 0;\n}\n"
  },
  {
    "id": 45,
    "text": "#include <fstream>\n#include <cstring>\nusing namespace std;\nifstream fin(\"cuvinte.in\");\nofstream fout(\"cuvinte.out\");\nchar v[101][31], s[256];\nint n;\nint main()\n{\n    fin.get(s, 255);\n    char *p;\n    p = strtok(s, \" \");\n    while (p != NULL)\n    {\n\n        strcpy(v[n], p);\n        n++;\n        p = strtok(NULL, \" \");\n    }\n    int nrlmare = 0;\n    for (int i = 0; i < n; i++)\n        if (v[i][0] >= 'A' and v[i][0] <= 'Z')\n            nrlmare++;\n    fout << nrlmare << '\\n';\n    int lmax = 0;\n    for (int i = 0; i < n; i++)\n    {\n        if (strlen(v[i]) > lmax)\n            lmax = strlen(v[i]);\n    }\n\n    for (int i = 0; i < n; i++)\n    {\n\n        if (strlen(v[i]) == lmax)\n            fout << v[i] << ' ';\n    }\n    fin.close();\n    fout.close();\n    return 0;\n}\n"
  },
  {
    "id": 46,
    "text": "#include <fstream>\n#include <cstring>\nusing namespace std;\nifstream fin(\"cuvant3.in\");\nofstream fout(\"cuvant3.out\");\nchar s[256], v[101][31];\nchar *p;\nint nrc, nrs, n;\nint main()\n{\n    fin.get(s, 255);\n    for (int i = 0; i < strlen(s); i++)\n        if (s[i] == ' ')\n            nrs++;\n        else\n            nrc++;\n    fout << nrc << \" \" << nrs << endl;\n    p = strtok(s, \" \");\n    while (p != NULL)\n    {\n        strcpy(v[n], p);\n        n++;\n        p = strtok(NULL, \" \");\n    }\n    for (int i = 0; i < n - 1; i++)\n        for (int j = i + 1; j < n; j++)\n            if (strcmp(v[i], v[j]) > 0)\n            {\n                char aux[255];\n                strcpy(aux, v[i]);\n                strcpy(v[i], v[j]);\n                strcpy(v[j], aux);\n            }\n    for (int i = 0; i < n; i++)\n        fout << v[i] << endl;\n    fin.close();\n    fout.close();\n    return 0;\n}\n"
  },
  {
    "id": 47,
    "text": "#include <fstream>\n#include <cstring>\nusing namespace std;\nifstream fin(\"cuvinte.in\");\nofstream fout(\"cuvinte.out\");\nchar v[101][31], t[31];\nint n, nr;\nint main()\n{\n    fin >> n;\n    for (int i = 0; i < n; i++)\n        fin >> v[i];\n    for (int i = 0; i < n; i++)\n    {\n        strcpy(t, v[i]);\n        strrev(t);\n        if (strcmp(t, v[i]) == 0)\n            nr++;\n    }\n    fout << nr << endl;\n    for (int i = 0; i < n - 1; i++)\n        for (int j = i + 1; j < n; j++)\n            if (strcmp(v[i], v[j]) > 0)\n            {\n                char aux[255];\n                strcpy(aux, v[i]);\n                strcpy(v[i], v[j]);\n                strcpy(v[j], aux);\n            }\n    for (int i = 0; i < n; i++)\n    {\n        strcpy(t, v[i]);\n        if (strcmp(t, v[i]) == 0)\n            fout << v[i] << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "id": 48,
    "text": ""
  },
  {
    "id": 49,
    "text": "#include <fstream>\n#include <cmath>\nusing namespace std;\nifstream fin(\"atestat.in\");\nofstream fout(\"atestat.out\");\nint v[11], n, nrsol, nrpare;\nvoid citire()\n{\n    fin >> n;\n}\nvoid afis()\n{\n    nrsol++;\n    fout << \"Solutia numarul: \" << nrsol << endl;\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            if (v[i] == j)\n                fout << 'D';\n            else\n                fout << '@';\n        fout << endl;\n    }\n}\nint verif(int k)\n{\n    for (int i = 1; i <= k - 1; i++)\n    {\n        if (v[k] == v[i])\n            return 0;\n        if (k - i == abs(v[k] - v[i]))\n            return 0;\n    }\n    return 1;\n}\nint verifpare()\n{\n    for (int i = 2; i <= n; i = i + 2)\n        if (v[i] % 2 == 0)\n            return 0;\n    return 1;\n}\nint bk(int k)\n{\n    for (int col = 1; col <= n; col++)\n    {\n        v[k] = col;\n        if (verif(k) == 1)\n            if (k == n)\n            {\n                afis();\n                if (verifpare() == 1)\n                    nrpare++;\n            }\n            else\n                bk(k + 1);\n    }\n}\nint main()\n{\n    citire();\n    bk(1);\n    fout << nrsol << endl\n         << nrpare;\n    return 0;\n}\n"
  },
  {
    "id": 50,
    "text": "#include <iostream>\nusing namespace std;\nint v[101], n, a, b, nrsol;\nvoid citire()\n{\n    cin >> n >> a >> b;\n}\nvoid afis()\n{\n    nrsol++;\n    for (int i = 1; i <= n; i++)\n        cout << v[i] << ' ';\n    cout << endl;\n}\nint verif(int k)\n{\n    for (int i = 1; i <= k - 1; i++)\n        if (v[k] == v[i])\n            return 0;\n    if (v[k] == b)\n        for (int i = 1; i < k - 1; i++)\n            if (v[i] == a)\n                return 0;\n    if (v[k] == a)\n        for (int i = 1; i <= k - 1; i++)\n            if (v[i] == b)\n                return 0;\n    return 1;\n}\nvoid bk(int k)\n{\n    for (int i = 1; i <= n; i++)\n    {\n        v[k] = i;\n        if (verif(k) == 1)\n            if (k == n)\n                afis();\n            else\n                bk(k + 1);\n    }\n}\nint main()\n{\n    citire();\n    bk(1);\n    cout << nrsol;\n    return 0;\n}\n"
  },
  {
    "id": 101,
    "text": "#include <iostream>\nusing namespace std;\n\nint produs(int a, int b)\n{\n  int interval, p = 1;\n  a > b ? interval = b : interval = a;\n  for (int i = 1; i <= interval; i++)\n  {\n    if (a % i == 0 && b % i == 0)\n      p *= i;\n  }\n  return p;\n}\n\nint main()\n{\n  cout << produs(20, 12); // 8\n  return 0;\n}\n"
  },
  {
    "id": 102,
    "text": "#include <iostream>\n#include <cstring>\nusing namespace std;\nint n;\nchar s[101], firstLine[25][25], secondLine[25][25], cntFirstLine, cntSecondLine;\nbool ok1 = false, ok2 = false; // presupun ca ambele multimi sunt vide\n\nvoid citire()\n{\n  cin >> n;\n  cin.get(); // in asa fel evit backspace, pentru a putea trece la urmatoarea linie\n  cin.get(s, 101);\n}\n\nvoid rezolvare()\n{\n\n  char *p = strtok(s, \" \");\n  while (p != NULL)\n  {\n    if (strlen(p) < n)\n    {\n      strcpy(firstLine[cntFirstLine++], p);\n      ok1 = true;\n    }\n\n    else if (strlen(p) > n)\n    {\n      strcpy(secondLine[cntSecondLine++], p);\n      ok2 = true;\n    }\n\n    p = strtok(NULL, \" \");\n  }\n}\n\nvoid afis()\n{\n  if (ok1 == true && ok2 == true)\n  {\n    for (int i = 0; i < cntFirstLine; i++)\n      cout << firstLine[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < cntSecondLine; i++)\n      cout << secondLine[i] << \" \";\n  }\n  else\n    cout << \"nu exista\";\n}\n\nint main()\n{\n  citire();\n  rezolvare();\n  afis();\n  return 0;\n}"
  },
  {
    "id": 103,
    "text": "#include <fstream>\n#include <iostream>\nusing namespace std;\nifstream fin(\"bac.txt\");\nint n1, n2, n3, fr[1000001], v[4] = {0};\nvoid citire()\n{\n  fin >> n1 >> n2 >> n3;\n  v[1] = n1;\n  v[2] = n2;\n  v[3] = n3;\n  int x;\n  while (fin >> x)\n  {\n    fr[x]++;\n  }\n}\n\nvoid rezolvare()\n{\n  int res[4] = {0}, cnt = 1;\n\n  for (int j = 101; j >= 10 && cnt <= 3; j--)\n  {\n    if (fr[j] >= v[cnt])\n      res[cnt++] = j;\n  }\n  if (res[3] != 0)\n  {\n    for (int i = 1; i <= 3; i++)\n      cout << res[i] << \" \";\n  }\n  else\n    cout << \"nu exista\";\n}\nint main()\n{\n  citire();\n  rezolvare();\n  return 0;\n}"
  },
  {
    "id": 104,
    "text": "#include <iostream>\nusing namespace std;\n\nint impare(int n){\n    int aux = n;\n    int copyN = 0;\n    int og = 0;\n    while(aux){\n        int c =aux %10;\n        if(c%2 != 0) copyN = copyN*10 + c;\n        copyN = copyN*10 + c;\n        aux /=10;\n    }\n\n    while(copyN){\n        og = og *10 + copyN%10;\n        copyN/=10;\n    }\n    if(og==n)\n    return -1;\n    return og;\n}\n\nint main () \n{\n    cout<<impare(26);\n    return 0;\n}"
  },
  {
    "id": 105,
    "text": "#include <iostream>\n#include <cstring>\n#include <fstream>\nusing namespace std;\nifstream fin(\"f.in\");\nofstream fout(\"f.out\");\nint n;\nchar lista[101][11], sablon[256], res[10][100], cntRes = 0;\nvoid citire()\n{\n    fin >> n;\n    fin.ignore();\n    for (int i = 0; i < n; i++)\n    {\n        char *p;\n        fin >> p;\n        strcpy(lista[i], p);\n        fin.ignore();\n    }\n    fin.ignore();\n    fin.get(sablon, 256);\n}\n\nbool isGeneric(char *word)\n{\n    if (word[0] == '*')\n        return true;\n    return false;\n}\n\nvoid rezolvare()\n{\n    bool ok = true;\n    char *p = strtok(sablon, \" \");\n    while (p && ok)\n    {\n\n        if (isGeneric(p))\n        {\n            bool verif = false; // presupun ca nu am cvnt inlocuitor pentru generic\n            char *copy;\n            for (int i = 0; i < n; i++)\n            {\n                if (strlen(lista[i]) == strlen(p))\n                {\n                    strcpy(res[cntRes++], lista[i]);\n                    verif = true;\n                    break;\n                }\n            }\n            if (!verif)\n                ok = false;\n        }\n        else\n\n        {\n            strcpy(res[cntRes++], p);\n        }\n        p = strtok(NULL, \" \");\n    }\n    if (!ok)\n        fout << \"imposibil\";\n    else\n        for (int i = 0; i < cntRes; i++)\n            fout << res[i] << \" \";\n}\nint main()\n{\n    citire();\n    rezolvare();\n    return 0;\n}"
  }
  ]